#ifdef SETUP_DATA_DEFINITION
//----------------------------------------------------------------------------
// Put NVRAM data definitions here.
// For example: UINT8 Data1;
// These definitions will be converted by the build process
// to a definitions of SETUP_DATA fields.
//----------------------------------------------------------------------------
#endif
//----------------------------------------------------------------------------
//                CONTROL DEFINITION
//----------------------------------------------------------------------------
#if defined(VFRCOMPILE) && !defined(CONTROLS_ARE_DEFINED)
#define CONTROL_DEFINITION
#endif

#ifdef CONTROL_DEFINITION
#endif //ENDIF CONTROL_DEFINITION

//----------------------------------------------------------------------------
//                SECURITY - CRB Configuration Form
//----------------------------------------------------------------------------
#ifdef SECURITY_FORM_SET
    #ifdef FORM_SET_TYPEDEF
    #endif
  
    #ifdef FORM_SET_VARSTORE
        #ifdef SETUP_DATA_DEFINITION
        #endif
    #endif
  
    #ifdef AAEON_FORM_SET_ITEM
    #endif //AAEON_FORM_SET_ITEM
  
    #ifdef AAEON_FORM_SET_GOTO
    #endif //AAEON_FORM_SET_GOTO
  
    #ifdef FORM_SET_FORM
        form formid = AUTO_ID(AAEON_SECURITY_MAIN),
            title = STRING_TOKEN(STR_AAEON_SECURITY);
    
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_ONE))
    
            SEPARATOR
    
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_TWO))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_THREE))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_FOUR))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_FIVE))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_SIX))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_SEVEN))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_EIGHT))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_NINE))
            SUBTITLE(STRING_TOKEN(STR_SECURITY_BANNER_TEN))
            INVENTORY(STRING_TOKEN(STR_MIN_PASSWORD_LENGTH_NAME),STRING_TOKEN(STR_MIN_PASSWORD_LENGTH__VALUE))
            INVENTORY(STRING_TOKEN(STR_MAX_PASSWORD_LENGTH_NAME),STRING_TOKEN(STR_MAX_PASSWORD_LENGTH__VALUE))
    
            SEPARATOR
            SEPARATOR
    
            grayoutif  ideqval SYSTEM_ACCESS.Access == SYSTEM_PASSWORD_USER;
                password varid = AMITSESETUP.AdminPassword,
                    prompt = STRING_TOKEN(STR_ADMIN_PASSWORD),
                    help = STRING_TOKEN(STR_ADMIN_PASSWORD_HELP),
                    flags = 0,
                    minsize = PASSWORD_MIN_SIZE,
                    maxsize = PASSWORD_MAX_SIZE,
                    encoding = 1,
                endpassword;
            endif;  // grayout
    
            password varid = AMITSESETUP.UserPassword,
                prompt = STRING_TOKEN(STR_USER_PASSWORD),
                help = STRING_TOKEN(STR_USER_PASSWORD_HELP),
                flags = 0,
                minsize = PASSWORD_MIN_SIZE,
                maxsize = PASSWORD_MAX_SIZE,
                encoding = 1,
            endpassword;
	    

            #undef FORM_SET_FORM
            
            #define AAEON_FORM_SET_ITEM
            #include <SetupDefinitions.h>
            #undef AAEON_FORM_SET_ITEM
            #define AAEON_FORM_SET_GOTO
            #include <SetupDefinitions.h>
            #undef AAEON_FORM_SET_GOTO
            
            #define FORM_SET_FORM 
            
        endform; // AAEON_SECURITY_MAIN    

  #endif //FORM_SET_FORM
  
#endif  // SECURITY_FORM_SET

//**********************************************************************
//  Add a Goto in CRB Setup form so BCP CMD line can parse Aaeon setup
//**********************************************************************
#ifdef TOP_LEVEL_FORM_SET
    #ifdef FORM_SET_GOTO
		suppressif TRUE;
	        goto AAEON_SECURITY_MAIN, 
	        prompt = STRING_TOKEN(STR_AAEON_SECURITY),
	        help = STRING_TOKEN(STR_EMPTY);
		endif;
    #endif //FORM_SET_GOTO    
#endif // TOP_LEVEL_FORM_SET
