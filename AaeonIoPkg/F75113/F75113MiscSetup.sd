//**********************************************************************
//
// Name:  <F75113GpioSetup.sd>
//
// Description: SIO Form Template, Setup screen definition file
//
//**********************************************************************
//
#ifdef SETUP_DATA_DEFINITION
/***********************************************************/
/* Put NVRAM data definitions here.
/* For example:    UINT8 Data1;
/* These definitions will be converted by the build process
/* to a definitions of SETUP_DATA fields.
/***********************************************************/
    
    // GP0x
    UINT8 F75113_GP0x_Type[8];	// 0: Output, 1: Input
    UINT8 F75113_GP0x_Data[8];	// 0: Low,    1: High
    // GP1x
    UINT8 F75113_GP1x_Type[8];	// 0: Output, 1: Input
    UINT8 F75113_GP1x_Data[8];	// 0: Low,    1: High
    // GP2x
    UINT8 F75113_GP2x_Type[8];	// 0: Output, 1: Input
    UINT8 F75113_GP2x_Data[8];	// 0: Low,    1: High
    // GP3x
    UINT8 F75113_GP3x_Type[8];	// 0: Output, 1: Input
    UINT8 F75113_GP3x_Data[8];	// 0: Low,    1: High
    // GP4x
    UINT8 F75113_GP4x_Type[8];	// 0: Output, 1: Input
    UINT8 F75113_GP4x_Data[8];	// 0: Low,    1: High
#endif //SETUP_DATA_DEFINITION

#if defined(VFRCOMPILE) && !defined(CONTROLS_ARE_DEFINED)
#define CONTROL_DEFINITION
#endif

#ifdef CONTROL_DEFINITION

	#define ONEOF_F75113_GP0X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		oneof varid     = SETUP_DATA.F75113_GP0x_Type[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_TYPE), \
			help    = STRING_TOKEN(STR_GPIO_TYPE_HELP), \
			default = PIN_TYPE_DEFAULT, \
			default = PIN_TYPE_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_F75113_GP0X_DATA(PIN_NUM, PIN_DATA_DEFAULT) \
	      suppressif ideqval SETUP_DATA.F75113_GP0x_Type[PIN_NUM] == 0; \
		oneof varid     = SETUP_DATA.F75113_GP0x_Data[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_DATA), \
			help    = STRING_TOKEN(STR_GPIO_DATA_HELP), \
			default = PIN_DATA_DEFAULT, \
			default = PIN_DATA_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;\
	      endif;


	#define ONEOF_F75113_GP1X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		oneof varid     = SETUP_DATA.F75113_GP1x_Type[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_TYPE), \
			help    = STRING_TOKEN(STR_GPIO_TYPE_HELP), \
			default = PIN_TYPE_DEFAULT, \
			default = PIN_TYPE_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_F75113_GP1X_DATA(PIN_NUM, PIN_DATA_DEFAULT) \
	      suppressif ideqval SETUP_DATA.F75113_GP1x_Type[PIN_NUM] == 0; \
		oneof varid     = SETUP_DATA.F75113_GP1x_Data[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_DATA), \
			help    = STRING_TOKEN(STR_GPIO_DATA_HELP), \
			default = PIN_DATA_DEFAULT, \
			default = PIN_DATA_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;\
	      endif;

	#define ONEOF_F75113_GP2X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		oneof varid     = SETUP_DATA.F75113_GP2x_Type[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_TYPE), \
			help    = STRING_TOKEN(STR_GPIO_TYPE_HELP), \
			default = PIN_TYPE_DEFAULT, \
			default = PIN_TYPE_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_F75113_GP2X_DATA(PIN_NUM, PIN_DATA_DEFAULT) \
	      suppressif ideqval SETUP_DATA.F75113_GP2x_Type[PIN_NUM] == 0; \
		oneof varid     = SETUP_DATA.F75113_GP2x_Data[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_DATA), \
			help    = STRING_TOKEN(STR_GPIO_DATA_HELP), \
			default = PIN_DATA_DEFAULT, \
			default = PIN_DATA_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;\
	      endif;

	#define ONEOF_F75113_GP3X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		oneof varid     = SETUP_DATA.F75113_GP3x_Type[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_TYPE), \
			help    = STRING_TOKEN(STR_GPIO_TYPE_HELP), \
			default = PIN_TYPE_DEFAULT, \
			default = PIN_TYPE_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_F75113_GP3X_DATA(PIN_NUM, PIN_DATA_DEFAULT) \
	      suppressif ideqval SETUP_DATA.F75113_GP3x_Type[PIN_NUM] == 0; \
		oneof varid     = SETUP_DATA.F75113_GP3x_Data[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_DATA), \
			help    = STRING_TOKEN(STR_GPIO_DATA_HELP), \
			default = PIN_DATA_DEFAULT, \
			default = PIN_DATA_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;\
	      endif;

	#define ONEOF_F75113_GP4X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		oneof varid     = SETUP_DATA.F75113_GP4x_Type[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_TYPE), \
			help    = STRING_TOKEN(STR_GPIO_TYPE_HELP), \
			default = PIN_TYPE_DEFAULT, \
			default = PIN_TYPE_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_F75113_GP4X_DATA(PIN_NUM, PIN_DATA_DEFAULT) \
	      suppressif ideqval SETUP_DATA.F75113_GP4x_Type[PIN_NUM] == 0; \
		oneof varid     = SETUP_DATA.F75113_GP4x_Data[PIN_NUM], \
			prompt  = STRING_TOKEN(STR_GPIO_DATA), \
			help    = STRING_TOKEN(STR_GPIO_DATA_HELP), \
			default = PIN_DATA_DEFAULT, \
			default = PIN_DATA_DEFAULT, defaultstore = AmiMfgDefault, \
			option text = STRING_TOKEN(STR_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
   	 		option text = STRING_TOKEN(STR_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;\
	      endif;

#endif //#ifdef CONTROL_DEFINITION

#ifdef CONTROLS_WITH_DEFAULTS

#endif //#ifdef CONTROLS_WITH_DEFAULTS

	#define F75113_GP0X_ITEMS(PIN_NUM, PIN_TYPE_DEFAULT, PIN_DATA_DEFAULT) \
		ONEOF_F75113_GP0X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		ONEOF_F75113_GP0X_DATA(PIN_NUM, PIN_DATA_DEFAULT)

	#define F75113_GP0X_GROUP \
		SUBTITLE(STRING_TOKEN(STR_GP00)) \
		F75113_GP0X_ITEMS(0, F75113_GP00_TYPE_DEFAULT, F75113_GP00_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP01)) \
		F75113_GP0X_ITEMS(1, F75113_GP01_TYPE_DEFAULT, F75113_GP01_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP02)) \
		F75113_GP0X_ITEMS(2, F75113_GP02_TYPE_DEFAULT, F75113_GP02_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP03)) \
		F75113_GP0X_ITEMS(3, F75113_GP03_TYPE_DEFAULT, F75113_GP03_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP04)) \
		F75113_GP0X_ITEMS(4, F75113_GP04_TYPE_DEFAULT, F75113_GP04_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP05)) \
		F75113_GP0X_ITEMS(5, F75113_GP05_TYPE_DEFAULT, F75113_GP05_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP06)) \
		F75113_GP0X_ITEMS(6, F75113_GP06_TYPE_DEFAULT, F75113_GP06_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP07)) \
		F75113_GP0X_ITEMS(7, F75113_GP07_TYPE_DEFAULT, F75113_GP07_DATA_DEFAULT)

	#define F75113_GP1X_ITEMS(PIN_NUM, PIN_TYPE_DEFAULT, PIN_DATA_DEFAULT) \
		ONEOF_F75113_GP1X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		ONEOF_F75113_GP1X_DATA(PIN_NUM, PIN_DATA_DEFAULT)

	#define F75113_GP1X_GROUP \
		SUBTITLE(STRING_TOKEN(STR_GP10)) \
		F75113_GP1X_ITEMS(0, F75113_GP10_TYPE_DEFAULT, F75113_GP10_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP11)) \
		F75113_GP1X_ITEMS(1, F75113_GP11_TYPE_DEFAULT, F75113_GP11_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP12)) \
		F75113_GP1X_ITEMS(2, F75113_GP12_TYPE_DEFAULT, F75113_GP12_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP13)) \
		F75113_GP1X_ITEMS(3, F75113_GP13_TYPE_DEFAULT, F75113_GP13_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP14)) \
		F75113_GP1X_ITEMS(4, F75113_GP14_TYPE_DEFAULT, F75113_GP14_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP15)) \
		F75113_GP1X_ITEMS(5, F75113_GP15_TYPE_DEFAULT, F75113_GP15_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP16)) \
		F75113_GP1X_ITEMS(6, F75113_GP16_TYPE_DEFAULT, F75113_GP16_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP17)) \
		F75113_GP1X_ITEMS(7, F75113_GP17_TYPE_DEFAULT, F75113_GP17_DATA_DEFAULT)

	#define F75113_GP2X_ITEMS(PIN_NUM, PIN_TYPE_DEFAULT, PIN_DATA_DEFAULT) \
		ONEOF_F75113_GP2X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		ONEOF_F75113_GP2X_DATA(PIN_NUM, PIN_DATA_DEFAULT)

	#define F75113_GP2X_GROUP \
		SUBTITLE(STRING_TOKEN(STR_GP20)) \
		F75113_GP2X_ITEMS(0, F75113_GP20_TYPE_DEFAULT, F75113_GP20_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP21)) \
		F75113_GP2X_ITEMS(1, F75113_GP21_TYPE_DEFAULT, F75113_GP21_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP22)) \
		F75113_GP2X_ITEMS(2, F75113_GP22_TYPE_DEFAULT, F75113_GP22_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP23)) \
		F75113_GP2X_ITEMS(3, F75113_GP23_TYPE_DEFAULT, F75113_GP23_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP24)) \
		F75113_GP2X_ITEMS(4, F75113_GP24_TYPE_DEFAULT, F75113_GP24_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP25)) \
		F75113_GP2X_ITEMS(5, F75113_GP25_TYPE_DEFAULT, F75113_GP25_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP26)) \
		F75113_GP2X_ITEMS(6, F75113_GP26_TYPE_DEFAULT, F75113_GP26_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP27)) \
		F75113_GP2X_ITEMS(7, F75113_GP27_TYPE_DEFAULT, F75113_GP27_DATA_DEFAULT)

	#define F75113_GP3X_ITEMS(PIN_NUM, PIN_TYPE_DEFAULT, PIN_DATA_DEFAULT) \
		ONEOF_F75113_GP3X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		ONEOF_F75113_GP3X_DATA(PIN_NUM, PIN_DATA_DEFAULT)

	#define F75113_GP3X_GROUP \
		SUBTITLE(STRING_TOKEN(STR_GP30)) \
		F75113_GP3X_ITEMS(0, F75113_GP30_TYPE_DEFAULT, F75113_GP30_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP31)) \
		F75113_GP3X_ITEMS(1, F75113_GP31_TYPE_DEFAULT, F75113_GP31_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP32)) \
		F75113_GP3X_ITEMS(2, F75113_GP32_TYPE_DEFAULT, F75113_GP32_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP33)) \
		F75113_GP3X_ITEMS(3, F75113_GP33_TYPE_DEFAULT, F75113_GP33_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP34)) \
		F75113_GP3X_ITEMS(4, F75113_GP34_TYPE_DEFAULT, F75113_GP34_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP35)) \
		F75113_GP3X_ITEMS(5, F75113_GP35_TYPE_DEFAULT, F75113_GP35_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP36)) \
		F75113_GP3X_ITEMS(6, F75113_GP36_TYPE_DEFAULT, F75113_GP36_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP37)) \
		F75113_GP3X_ITEMS(7, F75113_GP37_TYPE_DEFAULT, F75113_GP37_DATA_DEFAULT) \		

	#define F75113_GP4X_ITEMS(PIN_NUM, PIN_TYPE_DEFAULT, PIN_DATA_DEFAULT) \
		ONEOF_F75113_GP4X_TYPE(PIN_NUM, PIN_TYPE_DEFAULT) \
		ONEOF_F75113_GP4X_DATA(PIN_NUM, PIN_DATA_DEFAULT)

	#define F75113_GP4X_GROUP \
		SUBTITLE(STRING_TOKEN(STR_GP40)) \
		F75113_GP4X_ITEMS(0, F75113_GP40_TYPE_DEFAULT, F75113_GP40_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP41)) \
		F75113_GP4X_ITEMS(1, F75113_GP41_TYPE_DEFAULT, F75113_GP41_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP42)) \
		F75113_GP4X_ITEMS(2, F75113_GP42_TYPE_DEFAULT, F75113_GP42_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP43)) \
		F75113_GP4X_ITEMS(3, F75113_GP43_TYPE_DEFAULT, F75113_GP43_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP44)) \
		F75113_GP4X_ITEMS(4, F75113_GP44_TYPE_DEFAULT, F75113_GP44_DATA_DEFAULT) \
		SUBTITLE(STRING_TOKEN(STR_GP45)) \
		F75113_GP4X_ITEMS(5, F75113_GP45_TYPE_DEFAULT, F75113_GP45_DATA_DEFAULT) \

//-------------------------------------------------------------------------
//Select Top level menu itmem (forset) for you pages
//-------------------------------------------------------------------------
#ifdef ADVANCED_FORM_SET

//-------------------------------------------------------------------------
//If you need any additional type definitions add them here
//-------------------------------------------------------------------------
#ifdef FORM_SET_TYPEDEF
    #include "Token.h"
#endif

//-------------------------------------------------------------------------
//If you need custom varstore's define them here
//-------------------------------------------------------------------------
#ifdef FORM_SET_VARSTORE
#endif

//-------------------------------------------------------------------------
//Define controls to be added to the top level page of the formset
//-------------------------------------------------------------------------
#ifdef FORM_SET_ITEM
#endif

//-------------------------------------------------------------------------
//Define goto commands for the forms defined in this file
//-------------------------------------------------------------------------
#ifdef FORM_SET_GOTO

        goto F75113_MISC_FORM_ID,
        	prompt  = STRING_TOKEN(STR_F75113_MISC_CONFIG),
        	help    = STRING_TOKEN(STR_F75113_MISC_CONFIG);

#endif

//-------------------------------------------------------------------------
// Define forms
//-------------------------------------------------------------------------
#ifdef FORM_SET_FORM

	#ifndef F75113_MISC_FORM_SETUP
	#define F75113_MISC_FORM_SETUP
	  form formid = AUTO_ID(F75113_MISC_FORM_ID),
	    title = STRING_TOKEN(STR_F75113_MISC_CONFIG);
	    SUBTITLE(STRING_TOKEN(STR_F75113_MISC_CONFIG))
	    SEPARATOR

        goto F75113_MISC_GPIO0X_FORM_ID,
        	prompt  = STRING_TOKEN(STR_F75113_MISC_GPIO0X_CONFIG),
        	help    = STRING_TOKEN(STR_F75113_MISC_GPIO0X_CONFIG);

        goto F75113_MISC_GPIO1X_FORM_ID,
        	prompt  = STRING_TOKEN(STR_F75113_MISC_GPIO1X_CONFIG),
        	help    = STRING_TOKEN(STR_F75113_MISC_GPIO1X_CONFIG);

        goto F75113_MISC_GPIO2X_FORM_ID,
        	prompt  = STRING_TOKEN(STR_F75113_MISC_GPIO2X_CONFIG),
        	help    = STRING_TOKEN(STR_F75113_MISC_GPIO2X_CONFIG);

        goto F75113_MISC_GPIO3X_FORM_ID,
        	prompt  = STRING_TOKEN(STR_F75113_MISC_GPIO3X_CONFIG),
        	help    = STRING_TOKEN(STR_F75113_MISC_GPIO3X_CONFIG);

        goto F75113_MISC_GPIO4X_FORM_ID,
        	prompt  = STRING_TOKEN(STR_F75113_MISC_GPIO4X_CONFIG),
        	help    = STRING_TOKEN(STR_F75113_MISC_GPIO4X_CONFIG);        	        	        	        	
	    
	  endform; //F75113_MISC_FORM_ID
	#endif //F75113_MISC_FORM_SETUP

	#ifndef F75113_MISC_GPIO0X_FORM_SETUP
	#define F75113_MISC_GPIO0X_FORM_SETUP
	  form formid = AUTO_ID(F75113_MISC_GPIO0X_FORM_ID),
	    title = STRING_TOKEN(STR_F75113_GPIO0X);
	    SUBTITLE(STRING_TOKEN(STR_F75113_GPIO0X))
	    SEPARATOR

	    // F75113 GPIO0X Groups
	    F75113_GP0X_GROUP
	    
	  endform; //F75113_MISC_GPIO0X_FORM_ID
	#endif //F75113_MISC_GPIO0X_FORM_SETUP	  

	#ifndef F75113_MISC_GPIO1X_FORM_SETUP
	#define F75113_MISC_GPIO1X_FORM_SETUP
	  form formid = AUTO_ID(F75113_MISC_GPIO1X_FORM_ID),
	    title = STRING_TOKEN(STR_F75113_GPIO1X);
	    SUBTITLE(STRING_TOKEN(STR_F75113_GPIO1X))
	    SEPARATOR

	    // F75113 GPIO1X Groups
	    F75113_GP1X_GROUP
	    
	  endform; //F75113_MISC_GPIO1X_FORM_ID
	#endif //F75113_MISC_GPIO1X_FORM_SETUP	

	#ifndef F75113_MISC_GPIO2X_FORM_SETUP
	#define F75113_MISC_GPIO2X_FORM_SETUP
	  form formid = AUTO_ID(F75113_MISC_GPIO2X_FORM_ID),
	    title = STRING_TOKEN(STR_F75113_GPIO2X);
	    SUBTITLE(STRING_TOKEN(STR_F75113_GPIO2X))
	    SEPARATOR

	    // F75113 GPIO2X Groups
	    F75113_GP2X_GROUP
	    
	  endform; //F75113_MISC_GPIO2X_FORM_ID
	#endif //F75113_MISC_GPIO2X_FORM_SETUP	

	#ifndef F75113_MISC_GPIO3X_FORM_SETUP
	#define F75113_MISC_GPIO3X_FORM_SETUP
	  form formid = AUTO_ID(F75113_MISC_GPIO3X_FORM_ID),
	    title = STRING_TOKEN(STR_F75113_GPIO3X);
	    SUBTITLE(STRING_TOKEN(STR_F75113_GPIO3X))
	    SEPARATOR

	    // F75113 GPIO3X Groups
	    F75113_GP3X_GROUP
	    
	  endform; //F75113_MISC_GPIO3X_FORM_ID
	#endif //F75113_MISC_GPIO3X_FORM_SETUP	

	#ifndef F75113_MISC_GPIO4X_FORM_SETUP
	#define F75113_MISC_GPIO4X_FORM_SETUP
	  form formid = AUTO_ID(F75113_MISC_GPIO4X_FORM_ID),
	    title = STRING_TOKEN(STR_F75113_GPIO4X);
	    SUBTITLE(STRING_TOKEN(STR_F75113_GPIO4X))
	    SEPARATOR

	    // F75113 GPIO4X Groups
	    F75113_GP4X_GROUP
	    
	  endform; //F75113_MISC_GPIO4X_FORM_ID
	#endif //F75113_MISC_GPIO0X_FORM_SETUP		  

#endif //FORM_SET_FORM

#endif//ADVANCED_FORM_SET

//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************




