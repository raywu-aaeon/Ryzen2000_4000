//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
#ifdef SETUP_DATA_DEFINITION

	UINT8	IT8625RestoreACPowerLoss;
	UINT8	IT8625SmbSlave0En;
	UINT8	IT8625SmbSlave1En;

	UINT8	IT8625UartIrqType[2];
	UINT8	IT8625UartAutoFlowCtrl[2];
	UINT8	IT8625UartRtsInvert[2];

	UINT8	IT8625WdtRstconout;
	UINT8	IT8625WdtTimeOutValSel;
	UINT8	IT8625WdtKrstEn;
	UINT8	IT8625WdtValExSel;
	UINT8	IT8625WdtPwrgdEn;

	UINT8	IT8625Gpio1x_Se[8];
	UINT8	IT8625Gpio1x_Oe[8];
	UINT8	IT8625Gpio1x_Val[8];
	UINT8	IT8625Gpio1x_Ipu[8];

	UINT8	IT8625Gpio2x_Se[8];
	UINT8	IT8625Gpio2x_Oe[8];
	UINT8	IT8625Gpio2x_Val[8];

	UINT8	IT8625Gpio3x_Se[8];
	UINT8	IT8625Gpio3x_Oe[8];
	UINT8	IT8625Gpio3x_Val[8];
	UINT8	IT8625Gpio3x_Ipu[8];

	UINT8	IT8625Gpio4x_Se[8];
	UINT8	IT8625Gpio4x_Oe[8];
	UINT8	IT8625Gpio4x_Val[8];
	UINT8	IT8625Gpio4x_Ipu[8];

	UINT8	IT8625Gpio5x_Se[8];
	UINT8	IT8625Gpio5x_Oe[8];
	UINT8	IT8625Gpio5x_Val[8];
	UINT8	IT8625Gpio5x_Ipu[8];

	UINT8	IT8625Gpio6x_Oe[8];
	UINT8	IT8625Gpio6x_Val[8];
	UINT8	IT8625Gpio6x_Ipu[8];

	UINT8	IT8625Gpio7x_Oe[8];
	UINT8	IT8625Gpio7x_Val[8];

	UINT8	IT8625Gpio8x_Oe[8];
	UINT8	IT8625Gpio8x_Val[8];

	UINT8	IT8625Gpio9x_Se[8];
	UINT8	IT8625Gpio9x_Oe[8];
	UINT8	IT8625Gpio9x_Val[8];
	UINT8	IT8625Gpio9x_Ipu[8];

	UINT8	IT8625GpioAx_Se[8];
	UINT8	IT8625GpioAx_Oe[8];
	UINT8	IT8625GpioAx_Val[8];
	UINT8	IT8625GpioAx_Ipu[8];

	UINT8	GpLed1Location;
	UINT8	IT8625GpLed1OutLow;
	UINT8	IT8625GpLed1Freq;
	UINT8	GpLed2Location;
	UINT8	IT8625GpLed2OutLow;
	UINT8	IT8625GpLed2Freq;

#endif //SETUP_DATA_DEFINITION

#ifdef CONTROL_DEFINITION

	#define ONEOF_IT8625RESTOREACPOWERLOSS\
		oneof varid    = SETUP_DATA.IT8625RestoreACPowerLoss,\
		prompt       = STRING_TOKEN (STR_IT8625RESTOREACPOWERLOSS),\
		help         = STRING_TOKEN (STR_IT8625RESTOREACPOWERLOSS_HELP),\
		default = ONEOF_IT8625RESTOREACPOWERLOSS_DEFAULT,\
		default = ONEOF_IT8625RESTOREACPOWERLOSS_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625RESTOREACPOWERLOSS_LASTSTATE), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625RESTOREACPOWERLOSS_ALWAYSON), value = 1, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625RESTOREACPOWERLOSS_ALWAYSOFF), value = 2, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625RESTOREACPOWERLOSS_BYPASS), value = 3, flags = RESET_REQUIRED;\
		endoneof;

	#define ONEOF_IT8625_SMBUS_SLAVE_0\
		oneof varid    = SETUP_DATA.IT8625SmbSlave0En,\
		prompt      = STRING_TOKEN (STR_IT8625_SMBUS_SLAVE_0),\
		help        = STRING_TOKEN (STR_IT8625_SMBUS_SLAVE_0_HELP),\
		default     = ONEOF_IT8625_SMBUS_SLAVE_0_DEFAULT,\
		default     = ONEOF_IT8625_SMBUS_SLAVE_0_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
		endoneof;

	#define ONEOF_IT8625_SMBUS_SLAVE_1\
		oneof varid    = SETUP_DATA.IT8625SmbSlave1En,\
		prompt      = STRING_TOKEN (STR_IT8625_SMBUS_SLAVE_1),\
		help        = STRING_TOKEN (STR_IT8625_SMBUS_SLAVE_1_HELP),\
		default     = ONEOF_IT8625_SMBUS_SLAVE_1_DEFAULT,\
		default     = ONEOF_IT8625_SMBUS_SLAVE_1_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
		endoneof;

	#define ONEOF_IT8625_UART_IRQ_TYPE_0\
		oneof varid     = SETUP_DATA.IT8625UartIrqType[0],\
		prompt      = STRING_TOKEN(STR_IT8625_UART_IRQ_TYPE),\
		help        = STRING_TOKEN (STR_IT8625_UART_IRQ_TYPE),\
		default     = ONEOF_IT8625_UART1_IRQ_TYPE_DEFAULT,\
		default     = ONEOF_IT8625_UART1_IRQ_TYPE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_UART_IRQ_NORMAL), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_UART_IRQ_SHARING), value = 1, flags = RESET_REQUIRED;\
		endoneof;
	#define ONEOF_IT8625_UART_AUTO_FLOW_CTRL_0\
		oneof varid     = SETUP_DATA.IT8625UartAutoFlowCtrl[0],\
		prompt      = STRING_TOKEN(STR_IT8625_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_IT8625_UARTAUTOFLOWCONTROLENABLE),\
		default     = ONEOF_IT8625_UART1_AUTO_FLOW_CTRL_DEFAULT,\
		default     = ONEOF_IT8625_UART1_AUTO_FLOW_CTRL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
		endoneof;
	#define ONEOF_IT8625_UART_RTS_INVERT_0\
		oneof varid     = SETUP_DATA.IT8625UartRtsInvert[0],\
		prompt      = STRING_TOKEN(STR_IT8625_UART_RTS_INVERT),\
		help        = STRING_TOKEN (STR_IT8625_UART_RTS_INVERT),\
		default     = ONEOF_IT8625_UART_RTS_INVERT_0_DEFAULT,\
		default     = ONEOF_IT8625_UART_RTS_INVERT_0_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
		endoneof;
	#define ONEOF_IT8625_UART_IRQ_TYPE_1\
		oneof varid     = SETUP_DATA.IT8625UartIrqType[1],\
		prompt      = STRING_TOKEN(STR_IT8625_UART_IRQ_TYPE),\
		help        = STRING_TOKEN (STR_IT8625_UART_IRQ_TYPE),\
		default     = ONEOF_IT8625_UART2_IRQ_TYPE_DEFAULT,\
		default     = ONEOF_IT8625_UART2_IRQ_TYPE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_UART_IRQ_NORMAL), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_UART_IRQ_SHARING), value = 1, flags = RESET_REQUIRED;\
		endoneof;
	#define ONEOF_IT8625_UART_AUTO_FLOW_CTRL_1\
		oneof varid     = SETUP_DATA.IT8625UartAutoFlowCtrl[1],\
		prompt      = STRING_TOKEN(STR_IT8625_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_IT8625_UARTAUTOFLOWCONTROLENABLE),\
		default     = ONEOF_IT8625_UART2_AUTO_FLOW_CTRL_DEFAULT,\
		default     = ONEOF_IT8625_UART2_AUTO_FLOW_CTRL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
		endoneof;
	#define ONEOF_IT8625_UART_RTS_INVERT_1\
		oneof varid     = SETUP_DATA.IT8625UartRtsInvert[1],\
		prompt      = STRING_TOKEN(STR_IT8625_UART_RTS_INVERT),\
		help        = STRING_TOKEN (STR_IT8625_UART_RTS_INVERT),\
		default     = ONEOF_IT8625_UART_RTS_INVERT_1_DEFAULT,\
		default     = ONEOF_IT8625_UART_RTS_INVERT_1_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
		endoneof;

	#define ONEOF_IT8625_WDT_RSTCONOUT\
		oneof varid    = SETUP_DATA.IT8625WdtRstconout,\
		prompt       = STRING_TOKEN (STR_IT8625_WDT_RSTCONOUT),\
		help         = STRING_TOKEN (STR_IT8625_WDT_RSTCONOUT_HELP),\
		default = IT8625_WDT_RSTCONOUT_DEFAULT,\
		default = IT8625_WDT_RSTCONOUT_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625_WDT_TIMEOUT_VAL_SEL\
		oneof varid    = SETUP_DATA.IT8625WdtTimeOutValSel,\
		prompt       = STRING_TOKEN (STR_IT8625_WDT_TIMEOUT_VAL_SEL),\
		help         = STRING_TOKEN (STR_IT8625_WDT_TIMEOUT_VAL_SEL_HELP),\
		default = IT8625_WDT_TIMEOUT_VAL_SEL_DEFAULT,\
		default = IT8625_WDT_TIMEOUT_VAL_SEL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_MINUTE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_SECOND), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625_WDT_KRST\
		oneof varid    = SETUP_DATA.IT8625WdtKrstEn,\
		prompt       = STRING_TOKEN (STR_IT8625_WDT_KRST),\
		help         = STRING_TOKEN (STR_IT8625_WDT_KRST_HELP),\
		default = IT8625_WDT_KRST_DEFAULT,\
		default = IT8625_WDT_KRST_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625_WDT_VAL_EX_SEL\
		oneof varid    = SETUP_DATA.IT8625WdtValExSel,\
		prompt       = STRING_TOKEN (STR_IT8625_WDT_VAL_EX_SEL),\
		help         = STRING_TOKEN (STR_IT8625_WDT_VAL_EX_SEL_HELP),\
		default = IT8625_WDT_VAL_EX_SEL_DEFAULT,\
		default = IT8625_WDT_VAL_EX_SEL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_BY_WDT_SEL), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_62_5_MS_X_WDT_VAL), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625_WDT_PWRGD\
		oneof varid    = SETUP_DATA.IT8625WdtPwrgdEn,\
		prompt       = STRING_TOKEN (STR_IT8625_WDT_PWRGD),\
		help         = STRING_TOKEN (STR_IT8625_WDT_PWRGD_HELP),\
		default = IT8625_WDT_PWRGD_DEFAULT,\
		default = IT8625_WDT_PWRGD_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO1X_SE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio1x_Se[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_SE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_SE_HELP), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_ALTERNATE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_SIMPLE_IO), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO1X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio1x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO1X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio1x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO1X_IPU(PIN_NUM, PIN_IPU_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio1x_Ipu[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_IPU_HELP), \
		default = PIN_IPU_DEFAULT, \
		default = PIN_IPU_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO2X_SE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio2x_Se[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_SE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_SE_HELP), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_ALTERNATE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_SIMPLE_IO), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO2X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio2x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO2X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio2x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO3X_SE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio3x_Se[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_SE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_SE_HELP), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_ALTERNATE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_SIMPLE_IO), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO3X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio3x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO3X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio3x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO3X_IPU(PIN_NUM, PIN_IPU_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio3x_Ipu[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		default = PIN_IPU_DEFAULT, \
		default = PIN_IPU_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO4X_SE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio4x_Se[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_SE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_SE_HELP), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_ALTERNATE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_SIMPLE_IO), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO4X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio4x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO4X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio4x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO4X_IPU(PIN_NUM, PIN_IPU_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio4x_Ipu[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		default = PIN_IPU_DEFAULT, \
		default = PIN_IPU_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO5X_SE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio5x_Se[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_SE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_SE_HELP), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_ALTERNATE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_SIMPLE_IO), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO5X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio5x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO5X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio5x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO5X_IPU(PIN_NUM, PIN_IPU_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio5x_Ipu[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		default = PIN_IPU_DEFAULT, \
		default = PIN_IPU_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO6X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio6x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO6X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio6x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO6X_IPU(PIN_NUM, PIN_IPU_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio6x_Ipu[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		default = PIN_IPU_DEFAULT, \
		default = PIN_IPU_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO7X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio7x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO7X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio7x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO8X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio8x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO8X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio8x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIO9X_SE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio9x_Se[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_SE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_SE_HELP), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_ALTERNATE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_SIMPLE_IO), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO9X_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio9x_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO9X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio9x_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIO9X_IPU(PIN_NUM, PIN_IPU_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625Gpio9x_Ipu[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		default = PIN_IPU_DEFAULT, \
		default = PIN_IPU_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define ONEOF_IT8625GPIOAX_SE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625GpioAx_Se[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_SE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_SE_HELP), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_ALTERNATE), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_SIMPLE_IO), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIOAX_OE(PIN_NUM, PIN_OE_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625GpioAx_Oe[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_OE), \
		default = PIN_OE_DEFAULT, \
		default = PIN_OE_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIOAX_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625GpioAx_Val[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_VAL), \
		default = PIN_VAL_DEFAULT, \
		default = PIN_VAL_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
		endoneof;
	#define ONEOF_IT8625GPIOAX_IPU(PIN_NUM, PIN_IPU_DEFAULT) \
		oneof varid     = SETUP_DATA.IT8625GpioAx_Ipu[PIN_NUM], \
		prompt  = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		help    = STRING_TOKEN(STR_IT8625_GPIO_IPU), \
		default = PIN_IPU_DEFAULT, \
		default = PIN_IPU_DEFAULT, defaultstore = AmiMfgDefault, \
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define NUMERIC_GP_LED1_LOCATION\
		numeric varid     = SETUP_DATA.GpLed1Location, \
		prompt  = STRING_TOKEN(STR_IT8625_MISC_GP_LED1_LOCATION), \
		help    = STRING_TOKEN(STR_IT8625_MISC_GP_LED1_LOCATION_HELP), \
		flags 	= RESET_REQUIRED,\
		minimum = 0,\
		maximum = 57,\
		step    = 1,\
		default = GP_LED1_LOCATION_DEFAULT, \
	  	default = GP_LED1_LOCATION_DEFAULT, defaultstore = AmiMfgDefault,\
		endnumeric;

	#define IT8625_GP_LED1_OUT_LOW\
		oneof varid    = SETUP_DATA.IT8625GpLed1OutLow,\
		prompt       = STRING_TOKEN (STR_IT8625_GP_LED1_OUT_LOW),\
		help         = STRING_TOKEN (STR_IT8625_GP_LED1_OUT_LOW_HELP),\
		default = IT8625_GP_LED1_OUT_LOW_DEFAULT,\
		default = IT8625_GP_LED1_OUT_LOW_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define IT8625_GP_LED1_FREQ_CTRL\
		oneof varid    = SETUP_DATA.IT8625GpLed1Freq,\
		prompt       = STRING_TOKEN (STR_IT8625_GP_LED1_FREQ_CTRL),\
		help         = STRING_TOKEN (STR_IT8625_GP_LED1_FREQ_CTRL_HELP),\
		default = IT8625_GP_LED1_FREQ_CTRL_DEFAULT,\
		default = IT8625_GP_LED1_FREQ_CTRL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_GP_LED_4HZ_50DUTY), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_1HZ_50DUTY), value = 1, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_25HZ_50DUTY), value = 2, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_2HZ_50DUTY), value = 3, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_25HZ_25DUTY), value = 4, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_25HZ_75DUTY), value = 5, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_125HZ_25DUTY), value = 6, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_125HZ_75DUTY), value = 7, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_4HZ_20DUTY), value = 8, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_5HZ_50DUTY), value = 16, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_125HZ_50DUTY), value = 24, flags = RESET_REQUIRED; \
		endoneof;

	#define NUMERIC_GP_LED2_LOCATION\
		numeric varid     = SETUP_DATA.GpLed2Location, \
		prompt  = STRING_TOKEN(STR_IT8625_MISC_GP_LED2_LOCATION), \
		help    = STRING_TOKEN(STR_IT8625_MISC_GP_LED2_LOCATION_HELP), \
		flags 	= RESET_REQUIRED,\
		minimum = 0,\
		maximum = 57,\
		step    = 1,\
		default = GP_LED2_LOCATION_DEFAULT, \
	  	default = GP_LED2_LOCATION_DEFAULT, defaultstore = AmiMfgDefault,\
		endnumeric;

	#define IT8625_GP_LED2_OUT_LOW\
		oneof varid    = SETUP_DATA.IT8625GpLed2OutLow,\
		prompt       = STRING_TOKEN (STR_IT8625_GP_LED2_OUT_LOW),\
		help         = STRING_TOKEN (STR_IT8625_GP_LED2_OUT_LOW_HELP),\
		default = IT8625_GP_LED2_OUT_LOW_DEFAULT,\
		default = IT8625_GP_LED2_OUT_LOW_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED; \
		endoneof;

	#define IT8625_GP_LED2_FREQ_CTRL\
		oneof varid    = SETUP_DATA.IT8625GpLed2Freq,\
		prompt       = STRING_TOKEN (STR_IT8625_GP_LED2_FREQ_CTRL),\
		help         = STRING_TOKEN (STR_IT8625_GP_LED2_FREQ_CTRL_HELP),\
		default = IT8625_GP_LED2_FREQ_CTRL_DEFAULT,\
		default = IT8625_GP_LED2_FREQ_CTRL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_IT8625_GP_LED_4HZ_50DUTY), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_1HZ_50DUTY), value = 1, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_25HZ_50DUTY), value = 2, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_2HZ_50DUTY), value = 3, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_25HZ_25DUTY), value = 4, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_25HZ_75DUTY), value = 5, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_125HZ_25DUTY), value = 6, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_125HZ_75DUTY), value = 7, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_4HZ_20DUTY), value = 8, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_5HZ_50DUTY), value = 16, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_IT8625_GP_LED_0_125HZ_50DUTY), value = 24, flags = RESET_REQUIRED; \
		endoneof;

#endif //CONTROL_DEFINITION

#ifdef CONTROLS_WITH_DEFAULTS

	ONEOF_IT8625RESTOREACPOWERLOSS
	ONEOF_IT8625_SMBUS_SLAVE_0
	ONEOF_IT8625_SMBUS_SLAVE_1
	ONEOF_IT8625_UART_IRQ_TYPE_0
	ONEOF_IT8625_UART_AUTO_FLOW_CTRL_0
	ONEOF_IT8625_UART_RTS_INVERT_0
	ONEOF_IT8625_UART_IRQ_TYPE_1
	ONEOF_IT8625_UART_AUTO_FLOW_CTRL_1
	ONEOF_IT8625_UART_RTS_INVERT_1
	ONEOF_IT8625_WDT_RSTCONOUT
	ONEOF_IT8625_WDT_TIMEOUT_VAL_SEL
	ONEOF_IT8625_WDT_KRST
	ONEOF_IT8625_WDT_VAL_EX_SEL
	ONEOF_IT8625_WDT_PWRGD
	NUMERIC_GP_LED1_LOCATION
	IT8625_GP_LED1_OUT_LOW
	IT8625_GP_LED1_FREQ_CTRL
	NUMERIC_GP_LED2_LOCATION
	IT8625_GP_LED2_OUT_LOW
	IT8625_GP_LED2_FREQ_CTRL

#endif //CONTROLS_WITH_DEFAULTS

// MACRO DEFINITIONS >>
// GPIO1X
#define ONEOF_IT8625GPIO1X_ITEMS(PIN_NUM, PIN_SE_DEFAULT, PIN_OE_DEFAULT, PIN_VAL_DEFAULT, PIN_IPU_DEFAULT) \
	ONEOF_IT8625GPIO1X_SE(PIN_NUM, PIN_SE_DEFAULT) \
	ONEOF_IT8625GPIO1X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio1x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO1X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif; \
	ONEOF_IT8625GPIO1X_IPU(PIN_NUM, PIN_IPU_DEFAULT)

#define ONEOF_IT8625GPIO1X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO10)) \
	ONEOF_IT8625GPIO1X_ITEMS(0, IT8625GPIO10_SE_DEFAULT, IT8625GPIO10_OE_DEFAULT, IT8625GPIO10_VAL_DEFAULT, IT8625GPIO10_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO11)) \
	ONEOF_IT8625GPIO1X_ITEMS(1, IT8625GPIO11_SE_DEFAULT, IT8625GPIO11_OE_DEFAULT, IT8625GPIO11_VAL_DEFAULT, IT8625GPIO11_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO12)) \
	ONEOF_IT8625GPIO1X_ITEMS(2, IT8625GPIO12_SE_DEFAULT, IT8625GPIO12_OE_DEFAULT, IT8625GPIO12_VAL_DEFAULT, IT8625GPIO12_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO13)) \
	ONEOF_IT8625GPIO1X_ITEMS(3, IT8625GPIO13_SE_DEFAULT, IT8625GPIO13_OE_DEFAULT, IT8625GPIO13_VAL_DEFAULT, IT8625GPIO13_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO14)) \
	ONEOF_IT8625GPIO1X_ITEMS(4, IT8625GPIO14_SE_DEFAULT, IT8625GPIO14_OE_DEFAULT, IT8625GPIO14_VAL_DEFAULT, IT8625GPIO14_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO15)) \
	ONEOF_IT8625GPIO1X_ITEMS(5, IT8625GPIO15_SE_DEFAULT, IT8625GPIO15_OE_DEFAULT, IT8625GPIO15_VAL_DEFAULT, IT8625GPIO15_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO16)) \
	ONEOF_IT8625GPIO1X_ITEMS(6, IT8625GPIO16_SE_DEFAULT, IT8625GPIO16_OE_DEFAULT, IT8625GPIO16_VAL_DEFAULT, IT8625GPIO16_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO17)) \
	ONEOF_IT8625GPIO1X_ITEMS(7, IT8625GPIO17_SE_DEFAULT, IT8625GPIO17_OE_DEFAULT, IT8625GPIO17_VAL_DEFAULT, IT8625GPIO17_IPU_DEFAULT)

//GPIO2X
#define ONEOF_IT8625GPIO2X_ITEMS(PIN_NUM, PIN_SE_DEFAULT, PIN_OE_DEFAULT, PIN_VAL_DEFAULT) \
	ONEOF_IT8625GPIO2X_SE(PIN_NUM, PIN_SE_DEFAULT) \
	ONEOF_IT8625GPIO2X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio2x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO2X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif;

#define ONEOF_IT8625GPIO2X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO20)) \
	ONEOF_IT8625GPIO2X_ITEMS(0, IT8625GPIO20_SE_DEFAULT, IT8625GPIO20_OE_DEFAULT, IT8625GPIO20_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO21)) \
	ONEOF_IT8625GPIO2X_ITEMS(1, IT8625GPIO21_SE_DEFAULT, IT8625GPIO21_OE_DEFAULT, IT8625GPIO21_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO22)) \
	ONEOF_IT8625GPIO2X_ITEMS(2, IT8625GPIO22_SE_DEFAULT, IT8625GPIO22_OE_DEFAULT, IT8625GPIO22_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO23)) \
	ONEOF_IT8625GPIO2X_ITEMS(3, IT8625GPIO23_SE_DEFAULT, IT8625GPIO23_OE_DEFAULT, IT8625GPIO23_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO24)) \
	ONEOF_IT8625GPIO2X_ITEMS(4, IT8625GPIO24_SE_DEFAULT, IT8625GPIO24_OE_DEFAULT, IT8625GPIO24_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO25)) \
	ONEOF_IT8625GPIO2X_ITEMS(5, IT8625GPIO25_SE_DEFAULT, IT8625GPIO25_OE_DEFAULT, IT8625GPIO25_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO26)) \
	ONEOF_IT8625GPIO2X_ITEMS(6, IT8625GPIO26_SE_DEFAULT, IT8625GPIO26_OE_DEFAULT, IT8625GPIO26_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO27)) \
	ONEOF_IT8625GPIO2X_ITEMS(7, IT8625GPIO27_SE_DEFAULT, IT8625GPIO27_OE_DEFAULT, IT8625GPIO27_VAL_DEFAULT)

//GPIO3X
#define ONEOF_IT8625GPIO3X_ITEMS(PIN_NUM, PIN_SE_DEFAULT, PIN_OE_DEFAULT, PIN_VAL_DEFAULT, PIN_IPU_DEFAULT) \
	ONEOF_IT8625GPIO3X_SE(PIN_NUM, PIN_SE_DEFAULT) \
	ONEOF_IT8625GPIO3X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio3x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO3X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif; \
	ONEOF_IT8625GPIO3X_IPU(PIN_NUM, PIN_IPU_DEFAULT)
#define ONEOF_IT8625GPIO3X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO30)) \
	ONEOF_IT8625GPIO3X_ITEMS(0, IT8625GPIO30_SE_DEFAULT, IT8625GPIO30_OE_DEFAULT, IT8625GPIO30_VAL_DEFAULT, IT8625GPIO30_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO31)) \
	ONEOF_IT8625GPIO3X_ITEMS(1, IT8625GPIO31_SE_DEFAULT, IT8625GPIO31_OE_DEFAULT, IT8625GPIO31_VAL_DEFAULT, IT8625GPIO31_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO32)) \
	ONEOF_IT8625GPIO3X_ITEMS(2, IT8625GPIO32_SE_DEFAULT, IT8625GPIO32_OE_DEFAULT, IT8625GPIO32_VAL_DEFAULT, IT8625GPIO32_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO33)) \
	ONEOF_IT8625GPIO3X_ITEMS(3, IT8625GPIO33_SE_DEFAULT, IT8625GPIO33_OE_DEFAULT, IT8625GPIO33_VAL_DEFAULT, IT8625GPIO33_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO34)) \
	ONEOF_IT8625GPIO3X_ITEMS(4, IT8625GPIO34_SE_DEFAULT, IT8625GPIO34_OE_DEFAULT, IT8625GPIO34_VAL_DEFAULT, IT8625GPIO34_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO35)) \
	ONEOF_IT8625GPIO3X_ITEMS(5, IT8625GPIO35_SE_DEFAULT, IT8625GPIO35_OE_DEFAULT, IT8625GPIO35_VAL_DEFAULT, IT8625GPIO35_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO36)) \
	ONEOF_IT8625GPIO3X_ITEMS(6, IT8625GPIO36_SE_DEFAULT, IT8625GPIO36_OE_DEFAULT, IT8625GPIO36_VAL_DEFAULT, IT8625GPIO36_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO37)) \
	ONEOF_IT8625GPIO3X_ITEMS(7, IT8625GPIO37_SE_DEFAULT, IT8625GPIO37_OE_DEFAULT, IT8625GPIO37_VAL_DEFAULT, IT8625GPIO37_IPU_DEFAULT)

//GPIO4X
#define ONEOF_IT8625GPIO4X_ITEMS(PIN_NUM, PIN_SE_DEFAULT, PIN_OE_DEFAULT, PIN_VAL_DEFAULT, PIN_IPU_DEFAULT) \
	ONEOF_IT8625GPIO4X_SE(PIN_NUM, PIN_SE_DEFAULT) \
	ONEOF_IT8625GPIO4X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio4x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO4X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif; \
	ONEOF_IT8625GPIO4X_IPU(PIN_NUM, PIN_IPU_DEFAULT)
#define ONEOF_IT8625GPIO4X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO40)) \
	ONEOF_IT8625GPIO4X_ITEMS(0, IT8625GPIO40_SE_DEFAULT, IT8625GPIO40_OE_DEFAULT, IT8625GPIO40_VAL_DEFAULT, IT8625GPIO40_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO41)) \
	ONEOF_IT8625GPIO4X_ITEMS(1, IT8625GPIO41_SE_DEFAULT, IT8625GPIO41_OE_DEFAULT, IT8625GPIO41_VAL_DEFAULT, IT8625GPIO41_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO42)) \
	ONEOF_IT8625GPIO4X_ITEMS(2, IT8625GPIO42_SE_DEFAULT, IT8625GPIO42_OE_DEFAULT, IT8625GPIO42_VAL_DEFAULT, IT8625GPIO42_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO43)) \
	ONEOF_IT8625GPIO4X_ITEMS(3, IT8625GPIO43_SE_DEFAULT, IT8625GPIO43_OE_DEFAULT, IT8625GPIO43_VAL_DEFAULT, IT8625GPIO43_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO44)) \
	ONEOF_IT8625GPIO4X_ITEMS(4, IT8625GPIO44_SE_DEFAULT, IT8625GPIO44_OE_DEFAULT, IT8625GPIO44_VAL_DEFAULT, IT8625GPIO44_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO45)) \
	ONEOF_IT8625GPIO4X_ITEMS(5, IT8625GPIO45_SE_DEFAULT, IT8625GPIO45_OE_DEFAULT, IT8625GPIO45_VAL_DEFAULT, IT8625GPIO45_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO46)) \
	ONEOF_IT8625GPIO4X_ITEMS(6, IT8625GPIO46_SE_DEFAULT, IT8625GPIO46_OE_DEFAULT, IT8625GPIO46_VAL_DEFAULT, IT8625GPIO46_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO47)) \
	ONEOF_IT8625GPIO4X_ITEMS(7, IT8625GPIO47_SE_DEFAULT, IT8625GPIO47_OE_DEFAULT, IT8625GPIO47_VAL_DEFAULT, IT8625GPIO47_IPU_DEFAULT)

//GPIO5X
#define ONEOF_IT8625GPIO5X_ITEMS(PIN_NUM, PIN_SE_DEFAULT, PIN_OE_DEFAULT, PIN_VAL_DEFAULT, PIN_IPU_DEFAULT) \
	ONEOF_IT8625GPIO5X_SE(PIN_NUM, PIN_SE_DEFAULT) \
	ONEOF_IT8625GPIO5X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio5x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO5X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif; \
	ONEOF_IT8625GPIO5X_IPU(PIN_NUM, PIN_IPU_DEFAULT)
#define ONEOF_IT8625GPIO5X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO50)) \
	ONEOF_IT8625GPIO5X_ITEMS(0, IT8625GPIO50_SE_DEFAULT, IT8625GPIO50_OE_DEFAULT, IT8625GPIO50_VAL_DEFAULT, IT8625GPIO50_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO51)) \
	ONEOF_IT8625GPIO5X_ITEMS(1, IT8625GPIO51_SE_DEFAULT, IT8625GPIO51_OE_DEFAULT, IT8625GPIO51_VAL_DEFAULT, IT8625GPIO51_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO52)) \
	ONEOF_IT8625GPIO5X_ITEMS(2, IT8625GPIO52_SE_DEFAULT, IT8625GPIO52_OE_DEFAULT, IT8625GPIO52_VAL_DEFAULT, IT8625GPIO52_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO53)) \
	ONEOF_IT8625GPIO5X_ITEMS(3, IT8625GPIO53_SE_DEFAULT, IT8625GPIO53_OE_DEFAULT, IT8625GPIO53_VAL_DEFAULT, IT8625GPIO53_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO54)) \
	ONEOF_IT8625GPIO5X_ITEMS(4, IT8625GPIO54_SE_DEFAULT, IT8625GPIO54_OE_DEFAULT, IT8625GPIO54_VAL_DEFAULT, IT8625GPIO54_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO55)) \
	ONEOF_IT8625GPIO5X_ITEMS(5, IT8625GPIO55_SE_DEFAULT, IT8625GPIO55_OE_DEFAULT, IT8625GPIO55_VAL_DEFAULT, IT8625GPIO55_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO56)) \
	ONEOF_IT8625GPIO5X_ITEMS(6, IT8625GPIO56_SE_DEFAULT, IT8625GPIO56_OE_DEFAULT, IT8625GPIO56_VAL_DEFAULT, IT8625GPIO56_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO57)) \
	ONEOF_IT8625GPIO5X_ITEMS(7, IT8625GPIO57_SE_DEFAULT, IT8625GPIO57_OE_DEFAULT, IT8625GPIO57_VAL_DEFAULT, IT8625GPIO57_IPU_DEFAULT)

//GPIO6X
#define ONEOF_IT8625GPIO6X_ITEMS(PIN_NUM, PIN_OE_DEFAULT, PIN_VAL_DEFAULT, PIN_IPU_DEFAULT) \
	ONEOF_IT8625GPIO6X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio6x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO6X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif; \
	ONEOF_IT8625GPIO6X_IPU(PIN_NUM, PIN_IPU_DEFAULT)
#define ONEOF_IT8625GPIO6X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO60)) \
	ONEOF_IT8625GPIO6X_ITEMS(0, IT8625GPIO60_OE_DEFAULT, IT8625GPIO60_VAL_DEFAULT, IT8625GPIO60_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO61)) \
	ONEOF_IT8625GPIO6X_ITEMS(1, IT8625GPIO61_OE_DEFAULT, IT8625GPIO61_VAL_DEFAULT, IT8625GPIO61_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO62)) \
	ONEOF_IT8625GPIO6X_ITEMS(2, IT8625GPIO62_OE_DEFAULT, IT8625GPIO62_VAL_DEFAULT, IT8625GPIO62_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO63)) \
	ONEOF_IT8625GPIO6X_ITEMS(3, IT8625GPIO63_OE_DEFAULT, IT8625GPIO63_VAL_DEFAULT, IT8625GPIO63_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO64)) \
	ONEOF_IT8625GPIO6X_ITEMS(4, IT8625GPIO64_OE_DEFAULT, IT8625GPIO64_VAL_DEFAULT, IT8625GPIO64_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO65)) \
	ONEOF_IT8625GPIO6X_ITEMS(5, IT8625GPIO65_OE_DEFAULT, IT8625GPIO65_VAL_DEFAULT, IT8625GPIO65_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO66)) \
	ONEOF_IT8625GPIO6X_ITEMS(6, IT8625GPIO66_OE_DEFAULT, IT8625GPIO66_VAL_DEFAULT, IT8625GPIO66_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO67)) \
	ONEOF_IT8625GPIO6X_ITEMS(7, IT8625GPIO67_OE_DEFAULT, IT8625GPIO67_VAL_DEFAULT, IT8625GPIO67_IPU_DEFAULT)

//GPIO7X
#define ONEOF_IT8625GPIO7X_ITEMS(PIN_NUM, PIN_OE_DEFAULT, PIN_VAL_DEFAULT) \
	ONEOF_IT8625GPIO7X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio7x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO7X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif;
#define ONEOF_IT8625GPIO7X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO70)) \
	ONEOF_IT8625GPIO7X_ITEMS(0, IT8625GPIO70_OE_DEFAULT, IT8625GPIO70_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO71)) \
	ONEOF_IT8625GPIO7X_ITEMS(1, IT8625GPIO71_OE_DEFAULT, IT8625GPIO71_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO72)) \
	ONEOF_IT8625GPIO7X_ITEMS(2, IT8625GPIO72_OE_DEFAULT, IT8625GPIO72_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO73)) \
	ONEOF_IT8625GPIO7X_ITEMS(3, IT8625GPIO73_OE_DEFAULT, IT8625GPIO73_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO74)) \
	ONEOF_IT8625GPIO7X_ITEMS(4, IT8625GPIO74_OE_DEFAULT, IT8625GPIO74_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO75)) \
	ONEOF_IT8625GPIO7X_ITEMS(5, IT8625GPIO75_OE_DEFAULT, IT8625GPIO75_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO76)) \
	ONEOF_IT8625GPIO7X_ITEMS(6, IT8625GPIO76_OE_DEFAULT, IT8625GPIO76_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO77)) \
	ONEOF_IT8625GPIO7X_ITEMS(7, IT8625GPIO77_OE_DEFAULT, IT8625GPIO77_VAL_DEFAULT)

//GPIO8X
#define ONEOF_IT8625GPIO8X_ITEMS(PIN_NUM, PIN_OE_DEFAULT, PIN_VAL_DEFAULT) \
	ONEOF_IT8625GPIO8X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio8x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO8X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif;
#define ONEOF_IT8625GPIO8X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO80)) \
	ONEOF_IT8625GPIO8X_ITEMS(0, IT8625GPIO80_OE_DEFAULT, IT8625GPIO80_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO81)) \
	ONEOF_IT8625GPIO8X_ITEMS(1, IT8625GPIO81_OE_DEFAULT, IT8625GPIO81_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO82)) \
	ONEOF_IT8625GPIO8X_ITEMS(2, IT8625GPIO82_OE_DEFAULT, IT8625GPIO82_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO83)) \
	ONEOF_IT8625GPIO8X_ITEMS(3, IT8625GPIO83_OE_DEFAULT, IT8625GPIO83_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO84)) \
	ONEOF_IT8625GPIO8X_ITEMS(4, IT8625GPIO84_OE_DEFAULT, IT8625GPIO84_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO85)) \
	ONEOF_IT8625GPIO8X_ITEMS(5, IT8625GPIO85_OE_DEFAULT, IT8625GPIO85_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO86)) \
	ONEOF_IT8625GPIO8X_ITEMS(6, IT8625GPIO86_OE_DEFAULT, IT8625GPIO86_VAL_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO87)) \
	ONEOF_IT8625GPIO8X_ITEMS(7, IT8625GPIO87_OE_DEFAULT, IT8625GPIO87_VAL_DEFAULT)

//GPIO9X
#define ONEOF_IT8625GPIO9X_ITEMS(PIN_NUM, PIN_SE_DEFAULT, PIN_OE_DEFAULT, PIN_VAL_DEFAULT, PIN_IPU_DEFAULT) \
	ONEOF_IT8625GPIO9X_SE(PIN_NUM, PIN_SE_DEFAULT) \
	ONEOF_IT8625GPIO9X_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625Gpio9x_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIO9X_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif; \
	ONEOF_IT8625GPIO9X_IPU(PIN_NUM, PIN_IPU_DEFAULT)
#define ONEOF_IT8625GPIO9X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO90)) \
	ONEOF_IT8625GPIO9X_ITEMS(0, IT8625GPIO90_SE_DEFAULT, IT8625GPIO90_OE_DEFAULT, IT8625GPIO90_VAL_DEFAULT, IT8625GPIO90_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO91)) \
	ONEOF_IT8625GPIO9X_ITEMS(1, IT8625GPIO91_SE_DEFAULT, IT8625GPIO91_OE_DEFAULT, IT8625GPIO91_VAL_DEFAULT, IT8625GPIO91_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO92)) \
	ONEOF_IT8625GPIO9X_ITEMS(2, IT8625GPIO92_SE_DEFAULT, IT8625GPIO92_OE_DEFAULT, IT8625GPIO92_VAL_DEFAULT, IT8625GPIO92_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO93)) \
	ONEOF_IT8625GPIO9X_ITEMS(3, IT8625GPIO93_SE_DEFAULT, IT8625GPIO93_OE_DEFAULT, IT8625GPIO93_VAL_DEFAULT, IT8625GPIO93_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO94)) \
	ONEOF_IT8625GPIO9X_ITEMS(4, IT8625GPIO94_SE_DEFAULT, IT8625GPIO94_OE_DEFAULT, IT8625GPIO94_VAL_DEFAULT, IT8625GPIO94_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO95)) \
	ONEOF_IT8625GPIO9X_ITEMS(5, IT8625GPIO95_SE_DEFAULT, IT8625GPIO95_OE_DEFAULT, IT8625GPIO95_VAL_DEFAULT, IT8625GPIO95_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO96)) \
	ONEOF_IT8625GPIO9X_ITEMS(6, IT8625GPIO96_SE_DEFAULT, IT8625GPIO96_OE_DEFAULT, IT8625GPIO96_VAL_DEFAULT, IT8625GPIO96_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIO97)) \
	ONEOF_IT8625GPIO9X_ITEMS(7, IT8625GPIO97_SE_DEFAULT, IT8625GPIO97_OE_DEFAULT, IT8625GPIO97_VAL_DEFAULT, IT8625GPIO97_IPU_DEFAULT)

//GPIOAX
#define ONEOF_IT8625GPIOAX_ITEMS(PIN_NUM, PIN_SE_DEFAULT, PIN_OE_DEFAULT, PIN_VAL_DEFAULT, PIN_IPU_DEFAULT) \
	ONEOF_IT8625GPIOAX_SE(PIN_NUM, PIN_SE_DEFAULT) \
	ONEOF_IT8625GPIOAX_OE(PIN_NUM, PIN_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.IT8625GpioAx_Oe[PIN_NUM] == 0; \
	  ONEOF_IT8625GPIOAX_VAL(PIN_NUM, PIN_VAL_DEFAULT) \
	endif; \
	ONEOF_IT8625GPIOAX_IPU(PIN_NUM, PIN_IPU_DEFAULT)
#define ONEOF_IT8625GPIOAX_GROUP \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA0)) \
	ONEOF_IT8625GPIOAX_ITEMS(0, IT8625GPIOA0_SE_DEFAULT, IT8625GPIOA0_OE_DEFAULT, IT8625GPIOA0_VAL_DEFAULT, IT8625GPIOA0_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA1)) \
	ONEOF_IT8625GPIOAX_ITEMS(1, IT8625GPIOA1_SE_DEFAULT, IT8625GPIOA1_OE_DEFAULT, IT8625GPIOA1_VAL_DEFAULT, IT8625GPIOA1_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA2)) \
	ONEOF_IT8625GPIOAX_ITEMS(2, IT8625GPIOA2_SE_DEFAULT, IT8625GPIOA2_OE_DEFAULT, IT8625GPIOA2_VAL_DEFAULT, IT8625GPIOA2_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA3)) \
	ONEOF_IT8625GPIOAX_ITEMS(3, IT8625GPIOA3_SE_DEFAULT, IT8625GPIOA3_OE_DEFAULT, IT8625GPIOA3_VAL_DEFAULT, IT8625GPIOA3_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA4)) \
	ONEOF_IT8625GPIOAX_ITEMS(4, IT8625GPIOA4_SE_DEFAULT, IT8625GPIOA4_OE_DEFAULT, IT8625GPIOA4_VAL_DEFAULT, IT8625GPIOA4_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA5)) \
	ONEOF_IT8625GPIOAX_ITEMS(5, IT8625GPIOA5_SE_DEFAULT, IT8625GPIOA5_OE_DEFAULT, IT8625GPIOA5_VAL_DEFAULT, IT8625GPIOA5_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA6)) \
	ONEOF_IT8625GPIOAX_ITEMS(6, IT8625GPIOA6_SE_DEFAULT, IT8625GPIOA6_OE_DEFAULT, IT8625GPIOA6_VAL_DEFAULT, IT8625GPIOA6_IPU_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_IT8625_GPIOA7)) \
	ONEOF_IT8625GPIOAX_ITEMS(7, IT8625GPIOA7_SE_DEFAULT, IT8625GPIOA7_OE_DEFAULT, IT8625GPIOA7_VAL_DEFAULT, IT8625GPIOA7_IPU_DEFAULT)

// MACRO DEFINITIONS <<

//----------------------------------------------------------------------
//Select Top level menu itmem (forset) for you pages
//----------------------------------------------------------------------
#ifdef ADVANCED_FORM_SET

//----------------------------------------------------------------------
//If you need any additional type definitions add them here
//----------------------------------------------------------------------
#ifdef FORM_SET_TYPEDEF

#endif

//----------------------------------------------------------------------
//If you need custom varstore's define them here
//----------------------------------------------------------------------
#ifdef FORM_SET_VARSTORE
#endif

//----------------------------------------------------------------------
//Define controls to be added to the top level page of the formset
//----------------------------------------------------------------------
#ifdef FORM_SET_ITEM
#endif

//----------------------------------------------------------------------
//Define goto commands for the forms defined in this file
//----------------------------------------------------------------------
#ifdef FORM_SET_GOTO

	goto IT8625_MISC_CONFIGURATION_FORM_ID, 
	  prompt = STRING_TOKEN(STR_IT8625_MISC_CONFIGURATION),
	  help    = STRING_TOKEN(STR_IT8625_MISC_CONFIGURATION);

#endif

//----------------------------------------------------------------------
// Define forms
//----------------------------------------------------------------------
#ifdef FORM_SET_FORM

		#ifndef IT8625_MISC_CONFIGURATION_FORM_SETUP
		#define IT8625_MISC_CONFIGURATION_FORM_SETUP
		  form formid = AUTO_ID(IT8625_MISC_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_IT8625_MISC_CONFIGURATION);
			SUBTITLE(STRING_TOKEN(STR_IT8625_MISC_CONFIGURATION))

			SEPARATOR

			ONEOF_IT8625RESTOREACPOWERLOSS
			ONEOF_IT8625_SMBUS_SLAVE_0
			ONEOF_IT8625_SMBUS_SLAVE_1

			SEPARATOR

			// IT8625 Misc Uart Mode Configuration
			#if ((IT8625_SERIAL_PORT1_PRESENT == 1) || (IT8625_SERIAL_PORT2_PRESENT == 1))
			goto IT8625_MISC_UART_MODE_FORM_ID, 
			    prompt = STRING_TOKEN(STR_IT8625_MISC_UART_MODE_CFG),
			    help = STRING_TOKEN(STR_IT8625_MISC_UART_MODE_CFG_HELP);
			#endif // IT8625_SERIAL_PORT1_PRESENT || IT8625_SERIAL_PORT2_PRESENT

			// IT8625 Misc Watch Dog Configuration
			goto IT8625_MISC_WDT_FORM_ID, 
			    prompt = STRING_TOKEN(STR_IT8625_MISC_WDT_CFG),
			    help = STRING_TOKEN(STR_IT8625_MISC_WDT_CFG_HELP);

			// IT8625 Misc GPIO Configuration
			goto IT8625_MISC_GPIO_FORM_ID, 
			    prompt = STRING_TOKEN(STR_IT8625_MISC_GPIO_CFG),
			    help = STRING_TOKEN(STR_IT8625_MISC_GPIO_CFG_HELP);

			// IT8625 Misc GP LED Configuration
			goto IT8625_MISC_GP_LED_FORM_ID, 
			    prompt = STRING_TOKEN(STR_IT8625_MISC_GP_LED_CFG),
			    help = STRING_TOKEN(STR_IT8625_MISC_GP_LED_CFG_HELP);

		  endform;  // IT8625_MISC_CONFIGURATION_FORM_ID
		#endif //IT8625_MISC_CONFIGURATION_FORM_SETUP

		#if ((IT8625_SERIAL_PORT1_PRESENT == 1) || (IT8625_SERIAL_PORT2_PRESENT == 1))
		#ifndef IT8625_MISC_UART_MODE_FORM_SETUP
		#define IT8625_MISC_UART_MODE_FORM_SETUP
		  form formid = AUTO_ID(IT8625_MISC_UART_MODE_FORM_ID),
			title = STRING_TOKEN(STR_IT8625_MISC_UART_MODE_CFG);
			SUBTITLE(STRING_TOKEN(STR_IT8625_MISC_UART_MODE_CFG))

			SEPARATOR

			#if (IT8625_SERIAL_PORT1_PRESENT == 1)
			  SUBTITLE(STRING_TOKEN(STR_IT8625_SERIAL_PORT_1))
			  ONEOF_IT8625_UART_IRQ_TYPE_0
			  ONEOF_IT8625_UART_AUTO_FLOW_CTRL_0
			  ONEOF_IT8625_UART_RTS_INVERT_0
			  SEPARATOR
			#endif // IT8625_SERIAL_PORT1_PRESENT

			#if (IT8625_SERIAL_PORT2_PRESENT == 1)
			  SUBTITLE(STRING_TOKEN(STR_IT8625_SERIAL_PORT_2))
			  ONEOF_IT8625_UART_IRQ_TYPE_1
			  ONEOF_IT8625_UART_AUTO_FLOW_CTRL_1
			  ONEOF_IT8625_UART_RTS_INVERT_1
			#endif // IT8625_SERIAL_PORT2_PRESENT

		  endform;  // STR_IT8625_MISC_UART_MODE_CFG
		#endif //IT8625_MISC_UART_MODE_FORM_SETUP
		#endif // IT8625_SERIAL_PORT1_PRESENT || IT8625_SERIAL_PORT2_PRESENT

		#ifndef IT8625_MISC_WDT_FORM_SETUP
		#define IT8625_MISC_WDT_FORM_SETUP
		  form formid = AUTO_ID(IT8625_MISC_WDT_FORM_ID),
			title = STRING_TOKEN(STR_IT8625_MISC_WDT_CFG);
			SUBTITLE(STRING_TOKEN(STR_IT8625_MISC_WDT_CFG))

			SEPARATOR

			ONEOF_IT8625_WDT_RSTCONOUT
			ONEOF_IT8625_WDT_VAL_EX_SEL
			suppressif ideqval SETUP_DATA.IT8625WdtValExSel == 1;
			  ONEOF_IT8625_WDT_TIMEOUT_VAL_SEL
			endif;
			ONEOF_IT8625_WDT_KRST
			ONEOF_IT8625_WDT_PWRGD

		  endform;  // STR_IT8625_MISC_WDT_CFG
		#endif //IT8625_MISC_WDT_FORM_SETUP

		#ifndef IT8625_MISC_GPIO_FORM_SETUP
		#define IT8625_MISC_GPIO_FORM_SETUP
		  form formid = AUTO_ID(IT8625_MISC_GPIO_FORM_ID),
			title = STRING_TOKEN(STR_IT8625_MISC_GPIO_CFG);
			SUBTITLE(STRING_TOKEN(STR_IT8625_MISC_GPIO_CFG))

			SEPARATOR

			ONEOF_IT8625GPIO1X_GROUP
			ONEOF_IT8625GPIO2X_GROUP
			ONEOF_IT8625GPIO3X_GROUP
			ONEOF_IT8625GPIO4X_GROUP
			ONEOF_IT8625GPIO5X_GROUP
			ONEOF_IT8625GPIO6X_GROUP
			ONEOF_IT8625GPIO7X_GROUP
			ONEOF_IT8625GPIO8X_GROUP
			ONEOF_IT8625GPIO9X_GROUP
			ONEOF_IT8625GPIOAX_GROUP

		  endform;  // STR_IT8625_MISC_GPIO_CFG
		#endif //IT8625_MISC_GPIO_FORM_SETUP

		#ifndef IT8625_MISC_GP_LED_FORM_SETUP
		#define IT8625_MISC_GP_LED_FORM_SETUP
		  form formid = AUTO_ID(IT8625_MISC_GP_LED_FORM_ID),
			title = STRING_TOKEN(STR_IT8625_MISC_GP_LED_CFG);
			SUBTITLE(STRING_TOKEN(STR_IT8625_MISC_GP_LED_CFG))

			SEPARATOR

			NUMERIC_GP_LED1_LOCATION
			suppressif ideqval SETUP_DATA.GpLed1Location == 0;
			  IT8625_GP_LED1_OUT_LOW
			  IT8625_GP_LED1_FREQ_CTRL
			endif;

			NUMERIC_GP_LED2_LOCATION
			suppressif ideqval SETUP_DATA.GpLed2Location == 0;
			  IT8625_GP_LED2_OUT_LOW
			  IT8625_GP_LED2_FREQ_CTRL
			endif;

		  endform;  // STR_IT8625_MISC_GP_LED_CFG
		#endif //IT8625_MISC_GP_LED_FORM_SETUP

#endif //FORM_SET_FORM

#endif//ADVANCED_FORM_SET

//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
