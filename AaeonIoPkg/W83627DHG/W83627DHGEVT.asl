// THIS FILE IS INCLUDED to South Bridge device scope
//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************
//*************************************************************************
//
//<AMI_FHDR_START>
//
// Name:  <W83627DHGEVT.asl>
//
// Description: Define Event Handler For Super IO
//
//<AMI_FHDR_END>
//*************************************************************************
//Scope(\_SB.PCI0.SBRG) {
//-----------------------------------------------------------------------
// SET OF COMMON DATA/CONTROL METHODS USED FOR ALL LDN BASED SIO DEVICES
//-----------------------------------------------------------------------
// LIST of objects defined in this file:
// SIO specific: SIOR - Device node (_HID=0c02, UID=SPIO), SIO index/DAta IO access & SIO GPIO address space if available
// SIO specific: DCAT - Table correspondence the LDNs to Device order in Routing Table.
// SIO specific: ENFG & EXFG - Control methods to Enter and Exit configuration mode. ENFG & EXFG correspondingly
// SIO specific: LPTM - current parralel port mode
// SIO specific: UHID - PnP ID for given Serial port
// SIO specific: SIOS - SIO Chipset specific code called from _PTS
// SIO specific: SIOW - SIO Chipset specific code called from _WAK
// SIO specific: SIOH - SIO event handler, to be called from correspondent _Lxx method
// SIO specific: PowerResources & _PR0 object to control Power management for FDC, LPT, UART1,2.
//
// Generic :OpRegion & common Fields to access SIO configuration space
// Generic :CGLD - Convert Device category to LDN
// Generic :DSTA - Get device status according to ACTR register in LD IO space
// Generic :DCNT - Enable/Disable Decoding of Device resources, Route/Release resources to LPC bus
// Generic :DCRS - Returns Byte stream of device's Current resources
// Generic :DSRS - Configures new Resources to be decoded by a Device
// Device node:Motherboard resources
// SIO index/DAta IO access & SIO GPIO address space if available

//-------------------------------------------------------------------------
//-----------------------------------------------------------------------
// SIO_PME WAKE UP EVENTS //
//-----------------------------------------------------------------------
// Following code is the workaround for wake up on RI/Key/Mouse events
// are generated by SMC27x SuperIO. The wake up signal (SIO_PME) is
// connected to one of GPIOs of ICH chip.
// Make sure the correspondent GPIO in iICH is enabled to generate an SCI
//-----------------------------------------------------------------------
// Add Flag for Fix WakeUp Switch bug. 
    Name(PMFG, 0x00)    //PME wake ststus
//------------------------------------------------------------------------
// SIOS - SIO Chipset specific code called from _PTS
//-----------------------------------------------------------------------
// input  - Arg0 : Sleep state #
// output - nothing
//-----------------------------------------------------------------------
Method(SIOS, 1){
// Aware wake up events in SIO chip
    Store("SIOS", Debug)
    //AMI_TODO: 
    // 1. select sleep state
    If(LNotEqual(0x05, Arg0)){
        ^ENFG(0x0A)                 //Set Logical Device 0A (PME)
        // 2. clear Status
        Store(0xFF, ^RGE3)          //Clear Event Status
        Store(0xFF, ^OPT3)          //Clear I/O PME# Status(KBC)
        Store(0xFF, ^OPT4)
        // 3. enable wake-up ; Enable Keyboard, PS/2 Mouse,    UART 1&2 to Generate PME.
        if(\KBFG){
            Or(^RGE0, 0x40, ^RGE0)  //Enable keyboard wake-up function via PSOUT#
            Or(^OPT6, 0x10, ^OPT6)  //Enable PME interrupt of the KBC IRQ event
        }
        Else{
            And(^RGE0, 0xBF, ^RGE0) //Disable keyboard wake-up function via PSOUT#
            And(^OPT6, 0xEF, ^OPT6) //Disable PME interrupt of the KBC IRQ event
        }
        if(\MSFG){
            Or(^RGE0, 0x20, ^RGE0)  //Enable Mouse wake-up function via PSOUT#
            Or(^OPT6, 0x20, ^OPT6)  //Enable PME interrupt of the Mouse IRQ event
        }
        Else{
            And(^RGE0, 0xDF, ^RGE0) //Disable Mouse wake-up function via PSOUT#
            And(^OPT6, 0xDF, ^OPT6) //Disable PME interrupt of the Mouse IRQ event
        }
        // 4.Enable PME /wakeup
        Or(0x01, ^OPT2, Local0)       //Enable PME# ,Enable bit0
        Store(Local0, ^OPT2)

       ^EXFG()
    }
}
//-----------------------------------------------------------------------
// SIOW - SIO Chipset specific code called from _WAK
//-----------------------------------------------------------------------
// input  - Sleep State #
// output - nothing
//-----------------------------------------------------------------------
Method(SIOW, 1){
    Store("SIOW", Debug)
    //AMI_TODO: 
    ^ENFG(0x0A)                     //Set Logical Device 0A
    // 1. Clear Status
    Store(^RGE3, PMFG)              //PMFG=PME Wake Status
    Store(0xFF, ^RGE3)              //Clear Event Status
    Store(0xFF, ^OPT3)              //Clear I/O PME# Status
    Store(0xFF, ^OPT4)
    // 2. Disable PME
    And(^RGE0, 0x9F, ^RGE0)         //Disable KBC Wake Event,Clear bit5,bit6
    And(^OPT6, 0xCF, ^OPT6)         //Disable KBC Wake Event,Clear bit4,bit5

    And(0xFE, ^OPT2, Local0)        //Disable PME# ,Disable bit0
    Store(Local0, ^OPT2)   

    ^EXFG()
}
//-----------------------------------------------------------------------
// SIOH - SIO event handler, to be called from correspondent _Lxx method
// in order to serve the SIO chipset side of wake up event
//-----------------------------------------------------------------------
// input  - nothing
// output - nothing
//-----------------------------------------------------------------------
Method(SIOH, 0){
    If(And(PMFG, 0x01)){
        #if W83627DHG_KEYBOARD_PRESENT
        Notify(PS2K, 0x2)    //KBD Wake up
        #endif
    }
    If(And(PMFG, 0x02)){
        #if W83627DHG_MOUSE_PRESENT
        Notify(PS2M, 0x2)    //MOUSE Wake up
        #endif
    }
}

//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************