//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
//<AMI_FHDR_START>
//
// Name:  <F81866HwmSetup.sd>
//
// Description: HWM form template, setup screen definition file.
//
//<AMI_FHDR_END>
//**********************************************************************
#ifdef SETUP_DATA_DEFINITION

	UINT8	F81866RestoreACPowerLoss;
	UINT8	F81866UartAutoFlowControlEnable[6];
	UINT8	F81866Gpio7x8x_Lpt_Switch;

	UINT8	F81866Gpio0x_Oe[8];
	UINT8	F81866Gpio0x_Val[8];
	UINT8	F81866Gpio0x_DrvEn[8];
	UINT8	F81866Gpio1x_Oe[8];
	UINT8	F81866Gpio1x_Val[8];
	UINT8	F81866Gpio1x_DrvEn[8];
	UINT8	F81866Gpio2x_Oe[8];
	UINT8	F81866Gpio2x_Val[8];
	UINT8	F81866Gpio2x_DrvEn[8];
	UINT8	F81866Gpio3x_Oe[8];
	UINT8	F81866Gpio3x_Val[8];
	UINT8	F81866Gpio3x_DrvEn[8];
	UINT8	F81866Gpio4x_Oe[8];
	UINT8	F81866Gpio4x_Val[8];
	UINT8	F81866Gpio4x_DrvEn[8];
	UINT8	F81866Gpio5x_Oe[8];
	UINT8	F81866Gpio5x_Val[8];
	UINT8	F81866Gpio5x_DrvEn[8];
	UINT8	F81866Gpio6x_Oe[8];
	UINT8	F81866Gpio6x_Val[8];
	UINT8	F81866Gpio6x_DrvEn[8];
	UINT8	F81866Gpio7x_Oe[8];
	UINT8	F81866Gpio7x_Val[8];
	UINT8	F81866Gpio7x_DrvEn[8];
	UINT8	F81866Gpio8x_Oe[8];
	UINT8	F81866Gpio8x_Val[8];
	UINT8	F81866Gpio8x_DrvEn[8];
	
	UINT8   F81866ErpMode; // F81866_ERP_Miles++

#endif //SETUP_DATA_DEFINITION


#ifdef CONTROL_DEFINITION

	#define ONEOF_F81866RESTOREACPOWERLOSS\
		oneof varid    = SETUP_DATA.F81866RestoreACPowerLoss,\
		prompt       = STRING_TOKEN (STR_F81866RESTOREACPOWERLOSS),\
		help         = STRING_TOKEN (STR_F81866RESTOREACPOWERLOSS_HELP),\
		default = ONEOF_F81866RESTOREACPOWERLOSS_DEFAULT,\
		default = ONEOF_F81866RESTOREACPOWERLOSS_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866RESTOREACPOWERLOSS_LASTSTATE), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866RESTOREACPOWERLOSS_ALWAYSON), value = 1, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866RESTOREACPOWERLOSS_ALWAYSOFF), value = 2, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866RESTOREACPOWERLOSS_BYPASS), value = 3, flags = RESET_REQUIRED;\
		endoneof;
	#define ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_0\
	oneof varid     = SETUP_DATA.F81866UartAutoFlowControlEnable[0],\
		prompt      = STRING_TOKEN(STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		default     = F81866_UART1_RS485_EN,\
		default     = F81866_UART1_RS485_EN, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
	endoneof;
	#define ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_1\
	oneof varid     = SETUP_DATA.F81866UartAutoFlowControlEnable[1],\
		prompt      = STRING_TOKEN(STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		default     = F81866_UART2_RS485_EN,\
		default     = F81866_UART2_RS485_EN, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
	endoneof;
	#define ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_2\
	oneof varid     = SETUP_DATA.F81866UartAutoFlowControlEnable[2],\
		prompt      = STRING_TOKEN(STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		default     = F81866_UART3_RS485_EN,\
		default     = F81866_UART3_RS485_EN, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
	endoneof;
	#define ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_3\
	oneof varid     = SETUP_DATA.F81866UartAutoFlowControlEnable[3],\
		prompt      = STRING_TOKEN(STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		default     = F81866_UART4_RS485_EN,\
		default     = F81866_UART4_RS485_EN, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
	endoneof;
	#define ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_4\
	oneof varid     = SETUP_DATA.F81866UartAutoFlowControlEnable[4],\
		prompt      = STRING_TOKEN(STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		default     = F81866_UART5_RS485_EN,\
		default     = F81866_UART5_RS485_EN, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
	endoneof;
	#define ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_5\
	oneof varid     = SETUP_DATA.F81866UartAutoFlowControlEnable[5],\
		prompt      = STRING_TOKEN(STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		help        = STRING_TOKEN (STR_F81866_UARTAUTOFLOWCONTROLENABLE),\
		default     = F81866_UART6_RS485_EN,\
		default     = F81866_UART6_RS485_EN, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_COMMON_DISABLED), value = 0, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866_COMMON_ENABLED), value = 1, flags = RESET_REQUIRED;\
	endoneof;

	#define F81866GPIO7X8X_LPT_SWITCH\
	oneof varid     = SETUP_DATA.F81866Gpio7x8x_Lpt_Switch,\
		prompt      = STRING_TOKEN(STR_F81866_GPIO_LPT),\
		help        = STRING_TOKEN (STR_F81866_GPIO_LPT),\
		default     = F81866GPIO7X8X_LPT_SWITCH_DEFAULT,\
		default     = F81866GPIO7X8X_LPT_SWITCH_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_LPT), value = 1, flags = RESET_REQUIRED;\
		option text = STRING_TOKEN(STR_F81866_GPIO7X8X), value = 0, flags = RESET_REQUIRED;\
	endoneof;

	#define F81866_GPIO0X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio0x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO0X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio0x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO0X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio0x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO1X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio1x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO1X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio1x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO1X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio1x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO2X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio2x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO2X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio2x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO2X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio2x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO3X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio3x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO3X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio3x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO3X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio3x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO4X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio4x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO4X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio4x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO4X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio4x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO5X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio5x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO5X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio5x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO5X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio5x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO6X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio6x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO6X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio6x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO6X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio6x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;		

	#define F81866_GPIO7X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio7x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO7X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio7x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO7X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio7x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;					

	#define F81866_GPIO8X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio8x_Oe[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_OE), \
		help    = STRING_TOKEN(STR_F81866_GPIO_OE), \
		default = GPIO_OE_DEFAULT,\
		default = GPIO_OE_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_INPUT), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_OUTPUT), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO8X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio8x_Val[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		help    = STRING_TOKEN(STR_F81866_GPIO_VAL), \
		default = GPIO_VAL_DEFAULT,\
		default = GPIO_VAL_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_LOW), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_HIGH), value = 1, flags = RESET_REQUIRED; \
	endoneof;

	#define F81866_GPIO8X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT) \
	oneof varid    	= SETUP_DATA.F81866Gpio8x_DrvEn[UART_NUM], \
		prompt  = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		help    = STRING_TOKEN(STR_F81866_GPIO_DRVEN), \
		default = GPIO_DRVEN_DEFAULT,\
		default = GPIO_DRVEN_DEFAULT, defaultstore = AmiMfgDefault,\
		option text = STRING_TOKEN(STR_F81866_GPIO_OPENDRAIN), value = 0, flags = RESET_REQUIRED; \
		option text = STRING_TOKEN(STR_F81866_GPIO_PUSHPULL), value = 1, flags = RESET_REQUIRED; \
	endoneof;								

// F81866_ERP_Miles++ >>>>>
#if F81866_ERP_SUPPORT
#define ONEOF_F81866_ERPPOWERMODE \
	oneof varid    = SETUP_DATA.F81866ErpMode, \
	  prompt       = STRING_TOKEN (STR_F81866_POWER_SAVING_PROMPT), \
	  help         = STRING_TOKEN (STR_F81866_POWER_SAVING_HELP), \
	  option text  = STRING_TOKEN (STR_F81866_POWER_SAVING_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED; \
	  option text  = STRING_TOKEN (STR_F81866_POWER_SAVING_DEEPSX), value = 2, flags = RESET_REQUIRED; \
	endoneof;
#else
#define ONEOF_F81866_ERPPOWERMODE
#endif //F81866_ERP_SUPPORT
// F81866_ERP_Miles++ <<<<<
#endif //CONTROL_DEFINITION

#ifdef CONTROLS_WITH_DEFAULTS

	ONEOF_F81866RESTOREACPOWERLOSS

	ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_0
	ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_1
	ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_2
	ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_3
	ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_4
	ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_5

	F81866GPIO7X8X_LPT_SWITCH

	ONEOF_F81866_ERPPOWERMODE // F81866_ERP_Miles++
#endif //CONTROLS_WITH_DEFAULTS

//------------------------------------------------------------
// Define Macro
//------------------------------------------------------------

#define F81866_GPIO0X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO0X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio0x_Oe[UART_NUM] == 0; \
		F81866_GPIO0X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO0X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO0X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO00)) \
	F81866_GPIO0X_ITEMS(0, F81866GPIO00_OE_DEFAULT, F81866GPIO00_VAL_DEFAULT, F81866GPIO00_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO01)) \
	F81866_GPIO0X_ITEMS(1, F81866GPIO01_OE_DEFAULT, F81866GPIO01_VAL_DEFAULT, F81866GPIO01_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO02)) \
	F81866_GPIO0X_ITEMS(2, F81866GPIO02_OE_DEFAULT, F81866GPIO02_VAL_DEFAULT, F81866GPIO02_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO03)) \
	F81866_GPIO0X_ITEMS(3, F81866GPIO03_OE_DEFAULT, F81866GPIO03_VAL_DEFAULT, F81866GPIO03_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO04)) \
	F81866_GPIO0X_ITEMS(4, F81866GPIO04_OE_DEFAULT, F81866GPIO04_VAL_DEFAULT, F81866GPIO04_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO05)) \
	F81866_GPIO0X_ITEMS(5, F81866GPIO05_OE_DEFAULT, F81866GPIO05_VAL_DEFAULT, F81866GPIO05_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO06)) \
	F81866_GPIO0X_ITEMS(6, F81866GPIO06_OE_DEFAULT, F81866GPIO06_VAL_DEFAULT, F81866GPIO06_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO07)) \
	F81866_GPIO0X_ITEMS(7, F81866GPIO07_OE_DEFAULT, F81866GPIO07_VAL_DEFAULT, F81866GPIO07_DRVEN_DEFAULT) \
	SEPARATOR	

#define F81866_GPIO1X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO1X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio1x_Oe[UART_NUM] == 0; \
		F81866_GPIO1X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO1X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO1X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO10)) \
	F81866_GPIO1X_ITEMS(0, F81866GPIO10_OE_DEFAULT, F81866GPIO10_VAL_DEFAULT, F81866GPIO10_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO11)) \
	F81866_GPIO1X_ITEMS(1, F81866GPIO11_OE_DEFAULT, F81866GPIO11_VAL_DEFAULT, F81866GPIO11_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO12)) \
	F81866_GPIO1X_ITEMS(2, F81866GPIO12_OE_DEFAULT, F81866GPIO12_VAL_DEFAULT, F81866GPIO12_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO13)) \
	F81866_GPIO1X_ITEMS(3, F81866GPIO13_OE_DEFAULT, F81866GPIO13_VAL_DEFAULT, F81866GPIO13_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO14)) \
	F81866_GPIO1X_ITEMS(4, F81866GPIO14_OE_DEFAULT, F81866GPIO14_VAL_DEFAULT, F81866GPIO14_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO15)) \
	F81866_GPIO1X_ITEMS(5, F81866GPIO15_OE_DEFAULT, F81866GPIO15_VAL_DEFAULT, F81866GPIO15_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO16)) \
	F81866_GPIO1X_ITEMS(6, F81866GPIO16_OE_DEFAULT, F81866GPIO16_VAL_DEFAULT, F81866GPIO16_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO17)) \
	F81866_GPIO1X_ITEMS(7, F81866GPIO17_OE_DEFAULT, F81866GPIO17_VAL_DEFAULT, F81866GPIO17_DRVEN_DEFAULT) \
	SEPARATOR	

#define F81866_GPIO2X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO2X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio2x_Oe[UART_NUM] == 0; \
		F81866_GPIO2X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO2X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO2X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO20)) \
	F81866_GPIO2X_ITEMS(0, F81866GPIO20_OE_DEFAULT, F81866GPIO20_VAL_DEFAULT, F81866GPIO20_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO21)) \
	F81866_GPIO2X_ITEMS(1, F81866GPIO21_OE_DEFAULT, F81866GPIO21_VAL_DEFAULT, F81866GPIO21_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO22)) \
	F81866_GPIO2X_ITEMS(2, F81866GPIO22_OE_DEFAULT, F81866GPIO22_VAL_DEFAULT, F81866GPIO22_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO23)) \
	F81866_GPIO2X_ITEMS(3, F81866GPIO23_OE_DEFAULT, F81866GPIO23_VAL_DEFAULT, F81866GPIO23_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO24)) \
	F81866_GPIO2X_ITEMS(4, F81866GPIO24_OE_DEFAULT, F81866GPIO24_VAL_DEFAULT, F81866GPIO24_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO25)) \
	F81866_GPIO2X_ITEMS(5, F81866GPIO25_OE_DEFAULT, F81866GPIO25_VAL_DEFAULT, F81866GPIO25_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO26)) \
	F81866_GPIO2X_ITEMS(6, F81866GPIO26_OE_DEFAULT, F81866GPIO26_VAL_DEFAULT, F81866GPIO26_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO27)) \
	F81866_GPIO2X_ITEMS(7, F81866GPIO27_OE_DEFAULT, F81866GPIO27_VAL_DEFAULT, F81866GPIO27_DRVEN_DEFAULT) \
	SEPARATOR	

#define F81866_GPIO3X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO3X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio3x_Oe[UART_NUM] == 0; \
		F81866_GPIO3X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO3X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO3X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO30)) \
	F81866_GPIO3X_ITEMS(0, F81866GPIO30_OE_DEFAULT, F81866GPIO30_VAL_DEFAULT, F81866GPIO30_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO31)) \
	F81866_GPIO3X_ITEMS(1, F81866GPIO31_OE_DEFAULT, F81866GPIO31_VAL_DEFAULT, F81866GPIO31_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO32)) \
	F81866_GPIO3X_ITEMS(2, F81866GPIO32_OE_DEFAULT, F81866GPIO32_VAL_DEFAULT, F81866GPIO32_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO33)) \
	F81866_GPIO3X_ITEMS(3, F81866GPIO33_OE_DEFAULT, F81866GPIO33_VAL_DEFAULT, F81866GPIO33_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO34)) \
	F81866_GPIO3X_ITEMS(4, F81866GPIO34_OE_DEFAULT, F81866GPIO34_VAL_DEFAULT, F81866GPIO34_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO35)) \
	F81866_GPIO3X_ITEMS(5, F81866GPIO35_OE_DEFAULT, F81866GPIO35_VAL_DEFAULT, F81866GPIO35_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO36)) \
	F81866_GPIO3X_ITEMS(6, F81866GPIO36_OE_DEFAULT, F81866GPIO36_VAL_DEFAULT, F81866GPIO36_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO37)) \
	F81866_GPIO3X_ITEMS(7, F81866GPIO37_OE_DEFAULT, F81866GPIO37_VAL_DEFAULT, F81866GPIO37_DRVEN_DEFAULT) \
	SEPARATOR	

#define F81866_GPIO4X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO4X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio4x_Oe[UART_NUM] == 0; \
		F81866_GPIO4X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO4X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO4X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO40)) \
	F81866_GPIO4X_ITEMS(0, F81866GPIO40_OE_DEFAULT, F81866GPIO40_VAL_DEFAULT, F81866GPIO40_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO41)) \
	F81866_GPIO4X_ITEMS(1, F81866GPIO41_OE_DEFAULT, F81866GPIO41_VAL_DEFAULT, F81866GPIO41_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO42)) \
	F81866_GPIO4X_ITEMS(2, F81866GPIO42_OE_DEFAULT, F81866GPIO42_VAL_DEFAULT, F81866GPIO42_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO43)) \
	F81866_GPIO4X_ITEMS(3, F81866GPIO43_OE_DEFAULT, F81866GPIO43_VAL_DEFAULT, F81866GPIO43_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO44)) \
	F81866_GPIO4X_ITEMS(4, F81866GPIO44_OE_DEFAULT, F81866GPIO44_VAL_DEFAULT, F81866GPIO44_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO45)) \
	F81866_GPIO4X_ITEMS(5, F81866GPIO45_OE_DEFAULT, F81866GPIO45_VAL_DEFAULT, F81866GPIO45_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO46)) \
	F81866_GPIO4X_ITEMS(6, F81866GPIO46_OE_DEFAULT, F81866GPIO46_VAL_DEFAULT, F81866GPIO46_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO47)) \
	F81866_GPIO4X_ITEMS(7, F81866GPIO47_OE_DEFAULT, F81866GPIO47_VAL_DEFAULT, F81866GPIO47_DRVEN_DEFAULT) \
	SEPARATOR	

#define F81866_GPIO5X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO5X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio5x_Oe[UART_NUM] == 0; \
		F81866_GPIO5X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO5X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO5X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO50)) \
	F81866_GPIO5X_ITEMS(0, F81866GPIO50_OE_DEFAULT, F81866GPIO50_VAL_DEFAULT, F81866GPIO50_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO51)) \
	F81866_GPIO5X_ITEMS(1, F81866GPIO51_OE_DEFAULT, F81866GPIO51_VAL_DEFAULT, F81866GPIO51_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO52)) \
	F81866_GPIO5X_ITEMS(2, F81866GPIO52_OE_DEFAULT, F81866GPIO52_VAL_DEFAULT, F81866GPIO52_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO53)) \
	F81866_GPIO5X_ITEMS(3, F81866GPIO53_OE_DEFAULT, F81866GPIO53_VAL_DEFAULT, F81866GPIO53_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO54)) \
	F81866_GPIO5X_ITEMS(4, F81866GPIO54_OE_DEFAULT, F81866GPIO54_VAL_DEFAULT, F81866GPIO54_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO55)) \
	F81866_GPIO5X_ITEMS(5, F81866GPIO55_OE_DEFAULT, F81866GPIO55_VAL_DEFAULT, F81866GPIO55_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO56)) \
	F81866_GPIO5X_ITEMS(6, F81866GPIO56_OE_DEFAULT, F81866GPIO56_VAL_DEFAULT, F81866GPIO56_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO57)) \
	F81866_GPIO5X_ITEMS(7, F81866GPIO57_OE_DEFAULT, F81866GPIO57_VAL_DEFAULT, F81866GPIO57_DRVEN_DEFAULT) \
	SEPARATOR	

#define F81866_GPIO6X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO6X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio6x_Oe[UART_NUM] == 0; \
		F81866_GPIO6X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO6X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO6X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO60)) \
	F81866_GPIO6X_ITEMS(0, F81866GPIO60_OE_DEFAULT, F81866GPIO60_VAL_DEFAULT, F81866GPIO60_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO61)) \
	F81866_GPIO6X_ITEMS(1, F81866GPIO61_OE_DEFAULT, F81866GPIO61_VAL_DEFAULT, F81866GPIO61_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO62)) \
	F81866_GPIO6X_ITEMS(2, F81866GPIO62_OE_DEFAULT, F81866GPIO62_VAL_DEFAULT, F81866GPIO62_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO63)) \
	F81866_GPIO6X_ITEMS(3, F81866GPIO63_OE_DEFAULT, F81866GPIO63_VAL_DEFAULT, F81866GPIO63_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO64)) \
	F81866_GPIO6X_ITEMS(4, F81866GPIO64_OE_DEFAULT, F81866GPIO64_VAL_DEFAULT, F81866GPIO64_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO65)) \
	F81866_GPIO6X_ITEMS(5, F81866GPIO65_OE_DEFAULT, F81866GPIO65_VAL_DEFAULT, F81866GPIO65_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO66)) \
	F81866_GPIO6X_ITEMS(6, F81866GPIO66_OE_DEFAULT, F81866GPIO66_VAL_DEFAULT, F81866GPIO66_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO67)) \
	F81866_GPIO6X_ITEMS(7, F81866GPIO67_OE_DEFAULT, F81866GPIO67_VAL_DEFAULT, F81866GPIO67_DRVEN_DEFAULT) \
	SEPARATOR	

#define F81866_GPIO7X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO7X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio7x_Oe[UART_NUM] == 0; \
		F81866_GPIO7X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO7X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO7X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO70)) \
	F81866_GPIO7X_ITEMS(0, F81866GPIO70_OE_DEFAULT, F81866GPIO70_VAL_DEFAULT, F81866GPIO70_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO71)) \
	F81866_GPIO7X_ITEMS(1, F81866GPIO71_OE_DEFAULT, F81866GPIO71_VAL_DEFAULT, F81866GPIO71_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO72)) \
	F81866_GPIO7X_ITEMS(2, F81866GPIO72_OE_DEFAULT, F81866GPIO72_VAL_DEFAULT, F81866GPIO72_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO73)) \
	F81866_GPIO7X_ITEMS(3, F81866GPIO73_OE_DEFAULT, F81866GPIO73_VAL_DEFAULT, F81866GPIO73_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO74)) \
	F81866_GPIO7X_ITEMS(4, F81866GPIO74_OE_DEFAULT, F81866GPIO74_VAL_DEFAULT, F81866GPIO74_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO75)) \
	F81866_GPIO7X_ITEMS(5, F81866GPIO75_OE_DEFAULT, F81866GPIO75_VAL_DEFAULT, F81866GPIO75_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO76)) \
	F81866_GPIO7X_ITEMS(6, F81866GPIO76_OE_DEFAULT, F81866GPIO76_VAL_DEFAULT, F81866GPIO76_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO77)) \
	F81866_GPIO7X_ITEMS(7, F81866GPIO77_OE_DEFAULT, F81866GPIO77_VAL_DEFAULT, F81866GPIO77_DRVEN_DEFAULT) \
	SEPARATOR								

#define F81866_GPIO8X_ITEMS( \
	UART_NUM, \
	GPIO_OE_DEFAULT, \
	GPIO_VAL_DEFAULT, \
	GPIO_DRVEN_DEFAULT) \
	F81866_GPIO8X_OE(UART_NUM, GPIO_OE_DEFAULT) \
	suppressif ideqval SETUP_DATA.F81866Gpio8x_Oe[UART_NUM] == 0; \
		F81866_GPIO8X_VAL(UART_NUM, GPIO_VAL_DEFAULT) \
	endif; \
	F81866_GPIO8X_DRVEN(UART_NUM, GPIO_DRVEN_DEFAULT)

#define F81866_GPIO8X_GROUP \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO80)) \
	F81866_GPIO8X_ITEMS(0, F81866GPIO80_OE_DEFAULT, F81866GPIO80_VAL_DEFAULT, F81866GPIO80_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO81)) \
	F81866_GPIO8X_ITEMS(1, F81866GPIO81_OE_DEFAULT, F81866GPIO81_VAL_DEFAULT, F81866GPIO81_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO82)) \
	F81866_GPIO8X_ITEMS(2, F81866GPIO82_OE_DEFAULT, F81866GPIO82_VAL_DEFAULT, F81866GPIO82_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO83)) \
	F81866_GPIO8X_ITEMS(3, F81866GPIO83_OE_DEFAULT, F81866GPIO83_VAL_DEFAULT, F81866GPIO83_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO84)) \
	F81866_GPIO8X_ITEMS(4, F81866GPIO84_OE_DEFAULT, F81866GPIO84_VAL_DEFAULT, F81866GPIO84_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO85)) \
	F81866_GPIO8X_ITEMS(5, F81866GPIO85_OE_DEFAULT, F81866GPIO85_VAL_DEFAULT, F81866GPIO85_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO86)) \
	F81866_GPIO8X_ITEMS(6, F81866GPIO86_OE_DEFAULT, F81866GPIO86_VAL_DEFAULT, F81866GPIO86_DRVEN_DEFAULT) \
	SUBTITLE(STRING_TOKEN(STR_F81866_GPIO87)) \
	F81866_GPIO8X_ITEMS(7, F81866GPIO87_OE_DEFAULT, F81866GPIO87_VAL_DEFAULT, F81866GPIO87_DRVEN_DEFAULT) \
	SEPARATOR	
//----------------------------------------------------------------------
//Select Top level menu itmem (forset) for you pages
//----------------------------------------------------------------------
#ifdef ADVANCED_FORM_SET

//----------------------------------------------------------------------
//If you need any additional type definitions add them here
//----------------------------------------------------------------------
#ifdef FORM_SET_TYPEDEF

#endif

//----------------------------------------------------------------------
//If you need custom varstore's define them here
//----------------------------------------------------------------------
#ifdef FORM_SET_VARSTORE
#endif

//----------------------------------------------------------------------
//Define controls to be added to the top level page of the formset
//----------------------------------------------------------------------
#ifdef FORM_SET_ITEM
#endif

//----------------------------------------------------------------------
//Define goto commands for the forms defined in this file
//----------------------------------------------------------------------
#ifdef FORM_SET_GOTO

	goto F81866_GPIO_CONFIGURATION_FORM_ID, 
	prompt = STRING_TOKEN(STR_F81866_GPIO_CONFIGURATION),
	help    = STRING_TOKEN(STR_F81866_GPIO_CONFIGURATION);

#endif

//----------------------------------------------------------------------
// Define forms
//----------------------------------------------------------------------
#ifdef FORM_SET_FORM

		#ifndef F81866_GPIO_CONFIGURATION_FORM_SETUP
		#define F81866_GPIO_CONFIGURATION_FORM_SETUP
		form formid = AUTO_ID(F81866_GPIO_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO_CONFIGURATION);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO_CONFIGURATION))
			SEPARATOR

			ONEOF_F81866_ERPPOWERMODE // F81866_ERP_Miles++
			SEPARATOR

			ONEOF_F81866RESTOREACPOWERLOSS
			SEPARATOR

			SUBTITLE(STRING_TOKEN(STR_F81866_COM1))
			ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_0
			SUBTITLE(STRING_TOKEN(STR_F81866_COM2))
			ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_1
			SUBTITLE(STRING_TOKEN(STR_F81866_COM3))
			ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_2
			SUBTITLE(STRING_TOKEN(STR_F81866_COM4))
			ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_3
			SUBTITLE(STRING_TOKEN(STR_F81866_COM5))
			ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_4
			SUBTITLE(STRING_TOKEN(STR_F81866_COM6))
			ONEOF_F81866UARTAUTOFLOWCONTROLENABLE_5
			SEPARATOR

			F81866GPIO7X8X_LPT_SWITCH
			SEPARATOR

			goto F81866_GPIO0X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO0X),
			help    = STRING_TOKEN(STR_F81866_GPIO0X);

			goto F81866_GPIO1X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO1X),
			help    = STRING_TOKEN(STR_F81866_GPIO1X);

			goto F81866_GPIO2X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO2X),
			help    = STRING_TOKEN(STR_F81866_GPIO2X);

			goto F81866_GPIO3X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO3X),
			help    = STRING_TOKEN(STR_F81866_GPIO3X);

			goto F81866_GPIO4X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO4X),
			help    = STRING_TOKEN(STR_F81866_GPIO4X);

			goto F81866_GPIO5X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO5X),
			help    = STRING_TOKEN(STR_F81866_GPIO5X);

			goto F81866_GPIO6X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO6X),
			help    = STRING_TOKEN(STR_F81866_GPIO6X);

			goto F81866_GPIO7X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO7X),
			help    = STRING_TOKEN(STR_F81866_GPIO7X);

			goto F81866_GPIO8X_CONFIGURATION_FORM_ID, 
			prompt = STRING_TOKEN(STR_F81866_GPIO8X),
			help    = STRING_TOKEN(STR_F81866_GPIO8X);																								

		endform;  // F81866_GPIO_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO0X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO0X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO0X))
			SEPARATOR

			F81866_GPIO0X_GROUP

		endform;  // F81866_GPIO0X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO1X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO1X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO1X))
			SEPARATOR

			F81866_GPIO1X_GROUP

		endform;  // F81866_GPIO1X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO2X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO2X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO2X))
			SEPARATOR

			F81866_GPIO2X_GROUP

		endform;  // F81866_GPIO2X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO3X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO3X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO3X))
			SEPARATOR

			F81866_GPIO3X_GROUP

		endform;  // F81866_GPIO3X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO4X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO4X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO4X))
			SEPARATOR

			F81866_GPIO4X_GROUP

		endform;  // F81866_GPIO4X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO5X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO5X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO5X))
			SEPARATOR

			F81866_GPIO5X_GROUP

		endform;  // F81866_GPIO5X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO6X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO6X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO6X))
			SEPARATOR

			F81866_GPIO6X_GROUP

		endform;  // F81866_GPIO6X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO7X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO7X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO7X))
			SEPARATOR

			F81866_GPIO7X_GROUP

		endform;  // F81866_GPIO7X_CONFIGURATION_FORM_ID

		form formid = AUTO_ID(F81866_GPIO8X_CONFIGURATION_FORM_ID),
			title = STRING_TOKEN(STR_F81866_GPIO8X);
			SUBTITLE(STRING_TOKEN(STR_F81866_GPIO8X))
			SEPARATOR

			F81866_GPIO8X_GROUP

		endform;  // F81866_GPIO8X_CONFIGURATION_FORM_ID																	

		#endif //F81866_GPIO_CONFIGURATION_FORM_SETUP

#endif //FORM_SET_FORM

#endif//ADVANCED_FORM_SET

//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
